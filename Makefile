#
# (C) Copyright 2000-2006
# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
#
# See file CREDITS for list of people who contributed to this
# project.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
#

ifndef ARUBA_MAKE_VERBOSE
MAKEFLAGS += --no-print-directory -s
endif

TSTAMP:=$(shell date +'%Y-%m-%d at %H:%M:%S')

# NOTE
# NOTE THIS VERSION INFORMATION IS ONLY USED BY DEFAULT; SEE include/[ac]pboot_ver.mk
# NOTE
VERSION = 1
PATCHLEVEL = 1
SUBLEVEL = 4
EXTRAVERSION = .0
FIPS_VER = FIPS
# NOTE
# NOTE THIS VERSION INFORMATION IS ONLY USED BY DEFAULT; SEE include/[ac]pboot_ver.mk
# NOTE

POSTVERSION = \nBuilt:
#BUILDBY:= ($(USER)@$(P4CLIENT)-ENG.0000)
#U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION) $(BUILDBY)$(POSTVERSION)
ifdef FIPS
U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)-$(FIPS_VER)
else
U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
endif
VERSION_FILE = include/version_autogenerated.h
SYMSDIR=../../../${MODEL}_syms/prom

HOSTARCH := $(shell uname -m | \
	sed -e s/i.86/i386/ \
	    -e s/sun4u/sparc64/ \
	    -e s/arm.*/arm/ \
	    -e s/sa110/arm/ \
	    -e s/powerpc/ppc/ \
	    -e s/macppc/ppc/)

HOSTOS := $(shell uname -s | tr '[:upper:]' '[:lower:]' | \
	    sed -e 's/\(cygwin\).*/cygwin/')

export	HOSTARCH HOSTOS

# Deal with colliding definitions from tcsh etc.
VENDOR=

ifndef LABELID
SVERSION:= $(USER)@$(P4CLIENT)-ENG.0000
else
SVERSION:= $(LABELID)
LABELID2 = -${U_BOOT_VERSION}-${LABELID}
endif
ifndef USER
USER=p4build
endif
#########################################################################

TOPDIR	:= $(shell if [ "$$PWD" != "" ]; then echo $$PWD; else pwd; fi)
export	TOPDIR
SRCTREE		:= $(TOPDIR)
export	SRCTREE
ifeq (include/config.mk,$(wildcard include/config.mk))
# load ARCH, BOARD, and CPU configuration
include include/config.mk
ifneq (${VENDOR},)
sinclude board/${VENDOR}/${BOARD}/config.tmp
else
sinclude board/${BOARD}/config.tmp
endif
export	ARCH CPU BOARD VENDOR SOC
ifndef CROSS_COMPILE
ifeq ($(HOSTARCH),ppc)
CROSS_COMPILE =
else
ifeq ($(ARCH),ppc)
CROSS_COMPILE = ${ARUBA_SRC}/aos-cmn/tools/freescale-2010.09/bin/powerpc-linux-gnu-
endif
ifeq ($(ARCH),arm)
ifeq ($(CROSS),armlinux)
CROSS_COMPILE = arm-linux-
endif
endif
ifeq ($(CPU),armv7)
CROSS_COMPILE = ${ARUBA_SRC}/aos-cmn/tools/armv7-linux-gnu-uClibc-0.9.30/usr/bin/arm-linux-
ifeq ($(SOC), ipq806x)
STAGING_DIR=${ARUBA_SRC}/aos-cmn/tools/armv7-openwrt-linux-gnu-uClibc-0.9.33.2
export STAGING_DIR
CROSS_COMPILE = ${ARUBA_SRC}/aos-cmn/tools/armv7-openwrt-linux-gnu-uClibc-0.9.33.2/bin/arm-openwrt-linux-
endif
endif
ifeq ($(ARCH),i386)
ifeq ($(HOSTARCH),i386)
CROSS_COMPILE =
else
CROSS_COMPILE = i386-linux-
endif
endif
ifeq ($(ARCH),xlr)
CROSS_COMPILE = ${ARUBA_SRC}/tools/nebbiolo/toolchains/mipscross-1.00/crosstool/gcc-3.4.3-glibc-2.3.6/mipsisa32-xlr-linux/bin/mipsisa32-xlr-linux-
# CROSS_COMPILE = ${ARUBA_SRC}/tools/grenache/mipscross/crosstool//gcc-3.4.3-glibc-2.3.6/mipsisa32-xlr-linux/bin/mipsisa32-xlr-linux-
endif
ifeq ($(ARCH),xls)
CROSS_COMPILE = ${ARUBA_SRC}/tools/nebbiolo/toolchains/mipscross-1.00/crosstool/gcc-3.4.3-glibc-2.3.6/mipsisa32-xlr-linux/bin/mipsisa32-xlr-linux-
# CROSS_COMPILE = ${ARUBA_SRC}/tools/grenache/mipscross/crosstool//gcc-3.4.3-glibc-2.3.6/mipsisa32-xlr-linux/bin/mipsisa32-xlr-linux-
endif
ifeq (${ARCH},octeon)
CROSS_COMPILE = ${ARUBA_SRC}/tools/mips64-octeon-linux-gnu-4.3.3/bin/mips64-octeon-linux-gnu-
endif
ifeq ($(ARCH),mips)
CROSS_COMPILE = ${ARUBA_SRC}/tools/mips-linux-gnu-uClibc-0.9.30/usr/bin/mips-linux-uclibc-
# CROSS_COMPILE = ${ARUBA_SRC}/tools/grenache/mipscross/crosstool//gcc-3.4.3-glibc-2.3.6/mipsisa32-xlr-linux/bin/mipsisa32-xlr-linux-
endif
ifeq ($(ARCH),nios)
CROSS_COMPILE = nios-elf-
endif
ifeq ($(ARCH),nios2)
CROSS_COMPILE = nios2-elf-
endif
ifeq ($(ARCH),m68k)
CROSS_COMPILE = m68k-elf-
endif
ifeq ($(ARCH),microblaze)
CROSS_COMPILE = mb-
endif
ifeq ($(ARCH),blackfin)
CROSS_COMPILE = bfin-elf-
endif
endif
endif

export	CROSS_COMPILE

# load other configuration
include $(TOPDIR)/config.mk

ifeq (${APBOOT},true)
include include/apboot_ver.mk
endif

#########################################################################
# U-Boot objects....order is important (i.e. start must be first)

OBJS  = cpu/$(CPU)/start.o
ifeq (${VENDOR},ar7100)
OBJS  = cpu/$(CPU)/atheros_start.o
endif
ifeq (${VENDOR},ar7240)
OBJS  = cpu/$(CPU)/atheros_start.o
endif
ifeq (${VENDOR},atheros)
OBJS  = cpu/$(CPU)/atheros_start.o
endif

ifeq ($(CPU),i386)
OBJS += cpu/$(CPU)/start16.o
OBJS += cpu/$(CPU)/start.o
endif
ifeq ($(CPU),ppc4xx)
OBJS += cpu/$(CPU)/resetvec.o
endif
ifeq ($(CPU),mpc83xx)
OBJS += cpu/$(CPU)/resetvec.o
endif
ifeq ($(CPU),mpc85xx)
OBJS += cpu/$(CPU)/resetvec.o
endif
ifeq ($(CPU),bf533)
OBJS += cpu/$(CPU)/start1.o	cpu/$(CPU)/interrupt.o	cpu/$(CPU)/cache.o
OBJS += cpu/$(CPU)/cplbhdlr.o	cpu/$(CPU)/cplbmgr.o	cpu/$(CPU)/flush.o
endif

LIBS  = lib_generic/libgeneric.a
LIBS += board/$(BOARDDIR)/lib$(BOARD).a
LIBS += cpu/$(CPU)/lib$(CPU).a
ifdef SOC
ifneq ($(SOC),northstar)
LIBS += cpu/$(CPU)/$(SOC)/lib$(SOC).a
endif
ifeq ($(SOC),northstar)
LIBS += cpu/$(CPU)/$(SOC)/lib$(SOC).o
LIBS += cpu/${CPU}/iproc/libiproc.o
LIBS += cpu/${CPU}/iproc/shmoo/libshmoo.a
LIBS += cpu/${CPU}/iproc/mde/libmde.a
endif
endif
LIBS += lib_$(ARCH)${V7}/lib$(ARCH).a
ifeq ($(ARCH), ppc)
LIBS += fs/cramfs/libcramfs.a fs/fat/libfat.a fs/fdos/libfdos.a fs/jffs2/libjffs2.a \
	fs/reiserfs/libreiserfs.a fs/ext2/libext2fs.a
endif
LIBS += xyssl-0.9/libxyssl.a
LIBS += net/libnet.a
ifeq ($(ARCH), ppc)
LIBS += disk/libdisk.a
endif
LIBS += rtc/librtc.a
LIBS += dtt/libdtt.a
LIBS += drivers/libdrivers.a
ifneq ($(SOC), ipq806x)
LIBS += drivers/nand/libnand.a
endif
LIBS += drivers/sk98lin/libsk98lin.a
LIBS += lib/lzma/liblzma.a
ifeq ($(BOARD), config_kw2)
LIBS += drivers/spi/libspi_flash.a
endif
ifeq ($(SOC), northstar)
LIBS += drivers/spi/libspi_flash.a
endif
#ifeq ($(VENDOR), freescale)
#LIBS += drivers/spi/libspi_flash.a
#endif
ifeq ($(ARCH), ppc)
LIBS += libfdt/libfdt.a
LIBS += drivers/usb/libusb.a
endif
ifeq ($(SOC), ipq806x)
LIBS += libfdt/libfdt.a
LIBS += drivers/spi/libspi_flash.a
LIBS += drivers/mtd/nand/libnand.a
LIBS += drivers/mtd/libmtd.a
LIBS += drivers/mtd/ubi/libubi.a
endif
ifeq ($(CPU),mpc85xx)
#LIBS += drivers/qe/libqe.o
LIBS += cpu/mpc8xxx/ddr/libddr.a
LIBS += cpu/mpc8xxx/lib8xxx.a
endif
ifeq ($(CPU),mpc85xx)
LIBS += post/libpost.a post/lib_powerpc/libpostppc.a
endif
ifeq ($(SOC),northstar)
LIBS += post/libpost.a
endif
LIBS += common/libcommon.a
LIBS += $(BOARDLIBS)
.PHONY : $(LIBS)

# Add GCC lib
PLATFORM_LIBS += -L $(shell dirname `$(CC) $(CFLAGS) -print-libgcc-file-name`) -lgcc


# The "tools" are needed early, so put this first
# Don't include stuff already done in $(LIBS)
SUBDIRS	= tools
	  # examples
	  # post \
	  # post/cpu
.PHONY : $(SUBDIRS)

#########################################################################
#########################################################################

ALL = apboot u-boot.srec System.map
BINCPY = cp -f u-boot.bin u-boot-${MV_OUTPUT}.bin
ELFCPY = cp -f u-boot u-boot-${MV_OUTPUT}
SRECCPY = cp -f u-boot.srec u-boot-${MV_OUTPUT}.srec
ifeq ($(SOC), ipq806x)
PKGMBN = python tools/scripts/mkheader.py $(TEXT_BASE) u-boot.bin u-boot.mbn
else
PKGMBN =
endif

-include ./mv_base.mk
export MV_BASE_ADDR MV_ENTRY_ADDR

ifeq ($(CONFIG_NAND_SP),y)
DO_IMAGE_NAND = ./tools/doimage -T nand -D ${MV_BASE_ADDR} -E ${MV_ENTRY_ADDR} -P 512 -R \
marvell-dram/dramregs_$(MV_DDR_FREQ)_A.txt u-boot-${MV_OUTPUT}.bin u-boot-${MV_OUTPUT}_$(MV_DDR_FREQ)_nand.bin
endif
ifeq ($(CONFIG_NAND_LP),y)
DO_IMAGE_NAND = ./tools/doimage -T nand -D ${MV_BASE_ADDR} -E ${MV_ENTRY_ADDR} -P 2048 -R \
marvell-dram/dramregs_$(MV_DDR_FREQ)_A.txt u-boot-${MV_OUTPUT}.bin u-boot-${MV_OUTPUT}_$(MV_DDR_FREQ)_nand.bin
endif
DO_IMAGE_UART = ./tools/doimage -T uart -D ${MV_BASE_ADDR} -E ${MV_ENTRY_ADDR} -R \
marvell-dram/dramregs_$(MV_DDR_FREQ)_A.txt u-boot-${MV_OUTPUT}.bin u-boot-${MV_OUTPUT}_$(MV_DDR_FREQ)_uart.bin
DO_IMAGE_FLASH = ./tools/doimage -T flash -D ${MV_BASE_ADDR} -E ${MV_ENTRY_ADDR} -R \
marvell-dram/dramregs_$(MV_DDR_FREQ)_A.txt u-boot-${MV_OUTPUT}.bin u-boot-${MV_OUTPUT}_$(MV_DDR_FREQ)_flash.bin

DO_IMAGE_${MV_OUTPUT}_AP = ./tools/doimage -T flash -D ${MV_BASE_ADDR} -E ${MV_ENTRY_ADDR} -R \
marvell-dram/dramregs_${MV_OUTPUT}.txt u-boot.bin u-boot-${MV_OUTPUT}.bin
DO_IMAGE_${MV_OUTPUT}_AP_UART = ./tools/doimage -T uart -D ${MV_BASE_ADDR} -E ${MV_ENTRY_ADDR} -R \
marvell-dram/dramregs_${MV_OUTPUT}.txt u-boot.bin u-boot-${MV_OUTPUT}-uart.bin


all:		$(ALL)

u-boot.hex:	u-boot
		@echo "  HEX     u-boot.hex"
		./tools/hexdump -f u-boot.bin >u-boot.hex
#		$(OBJCOPY) ${OBJCFLAGS} -O ihex $< $@

u-boot.srec:	u-boot u-boot.bin
		@echo "  SREC    u-boot.srec"
ifdef MV_OUTPUT
		$(OBJCOPY) --adjust-vma ${MV_BASE_ADDR} -I binary ${OBJCFLAGS} -O srec u-boot-${MV_OUTPUT}.bin $@
else
		$(OBJCOPY) ${OBJCFLAGS} -O srec $< $@
endif
#		${SRECCPY}

u-boot.bin:	u-boot
		@echo "  BIN     u-boot.bin"
		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
		@echo " $(PKGMBN)"
		$(PKGMBN) 

apboot:	u-boot.bin

ifeq ($(BOARD), config_kw2)
#ifeq ($(NAND_BOOT), y)
#		$(DO_IMAGE_NAND)
#endif
#ifeq ($(SPI_BOOT), y)
#		$(DO_IMAGE_FLASH)
#endif
ifeq ($(APBOOT),true)
		$(DO_IMAGE_${MV_OUTPUT}_AP)
		$(DO_IMAGE_${MV_OUTPUT}_AP_UART)
endif
#		$(DO_IMAGE_UART)
endif

		./tools/hexdump -f u-boot.bin >u-boot.hex

u-boot.img:	u-boot.bin
		./tools/mkimage -A $(ARCH) -T firmware -C none \
		-a $(TEXT_BASE) -e 0 \
		-n $(shell sed -n -e 's/.*U_BOOT_VERSION//p' $(VERSION_FILE) | \
			sed -e 's/"[	 ]*$$/ for $(BOARD) board"/') \
		-d $< $@

u-boot.dis:	u-boot
		$(OBJDUMP) -d $< > $@

nboot:          $(NAND_OBJS)
		$(LD) $(NAND_LDFLAGS) $(NAND_OBJS) --start-group $(LIBS) $(PLATFORM_LIBS) --end-group\
		-e nbootStart -Map nboot.map -o nboot
		$(OBJCOPY) ${OBJCFLAGS} -O binary $@ $@.bin
		$(OBJDUMP) -d $@ > $@.dis

cnboot:		
		rm -f nboot*		

u-boot:		depend version timestamp_h $(obj)lib/asm-offsets.s $(obj)include/generated/generic-asm-offsets.h \
		$(SUBDIRS) $(OBJS) tstamp.o $(LIBS) $(LDSCRIPT)
		@echo "  LINK    u-boot"
		UNDEF_SYM=`$(OBJDUMP) -x $(LIBS) |sed  -n -e 's/.*\(__u_boot_cmd_.*\)/-u\1/p'|sort|uniq`;\
		$(LD) $(LDFLAGS) $$UNDEF_SYM $(OBJS) \
			--start-group $(LIBS) tstamp.o $(PLATFORM_LIBS) --end-group \
			-Map u-boot.map -o u-boot

tstamp.o:	tstamp.c

tstamp.c:       Makefile ${OBJS} ${LIBS} include/apboot_ver.mk include/cpboot_ver.mk
		@echo "  TSTAMP  tstamp.c"
		echo "char build_num[] = \"${SVERSION}\";" > tstamp.c
		echo "char build_time[] = \"${TSTAMP}\";" >> tstamp.c

$(LIBS):
		$(MAKE) -C `dirname $@`

$(SUBDIRS):
		$(MAKE) -C $@ all

timestamp_h:
		@LC_ALL=C date +'#define U_BOOT_DATE "%b %d %C%y"' > include/timestamp.h
		@LC_ALL=C date +'#define U_BOOT_TIME "%T"' >> include/timestamp.h

$(obj)lib/asm-offsets.s:	\
	$(src)lib/asm-offsets.c include/configs/${CONFIG_FILE}.h \
	include/config.h include/config.mk
	@mkdir -p $(obj)lib
	$(CC) -DDO_DEPS_ONLY \
		$(CFLAGS) $(CFLAGS_$(BCURDIR)/$(@F)) $(CFLAGS_$(BCURDIR)) \
		-o $@ $(src)lib/asm-offsets.c -c -S

$(obj)include/generated/generic-asm-offsets.h:	\
	$(obj)lib/asm-offsets.s
	@echo -e "  GEN     $@"
	tools/scripts/make-asm-offsets $(obj)lib/asm-offsets.s $@

version:
		@echo -n "#define U_BOOT_VERSION \"${BOOT_TYPE} " > $(VERSION_FILE); \
		echo -n "$(U_BOOT_VERSION)" >> $(VERSION_FILE); \
		echo -n $(shell $(CONFIG_SHELL) $(TOPDIR)/tools/setlocalversion \
			 $(TOPDIR)) >> $(VERSION_FILE); \
		echo "\"" >> $(VERSION_FILE)

gdbtools:
		$(MAKE) -C tools/gdb || exit 1

depend dep:
		@for dir in $(SUBDIRS) ; do $(MAKE) -C $$dir .depend ; done

tags:
		ctags -w `find $(SUBDIRS) include \
				lib_generic board/$(BOARDDIR) cpu/$(CPU) lib_$(ARCH) \
				fs/cramfs fs/fat fs/fdos fs/jffs2 \
				net disk rtc dtt drivers drivers/sk98lin common \
			\( -name CVS -prune \) -o \( -name '*.[ch]' -print \)`

cscope:
	find $(SUBDIRS) include \
		lib_generic board/$(BOARDDIR) cpu/$(CPU) lib_$(ARCH) \
		fs/cramfs fs/fat fs/fdos fs/jffs2 \
		net disk rtc dtt drivers drivers/sk98lin common \
		\( -name CVS -prune \) -o \( -name '*.[ch]' -print \) > cscope.files
	cscope -b -k -q

etags:
		etags -a `find $(SUBDIRS) include \
				lib_generic board/$(BOARDDIR) cpu/$(CPU) lib_$(ARCH) \
				fs/cramfs fs/fat fs/fdos fs/jffs2 \
				net disk rtc dtt drivers drivers/sk98lin common \
			\( -name CVS -prune \) -o \( -name '*.[ch]' -print \)`

System.map:	u-boot
		@$(NM) $< | \
		grep -v '\(compiled\)\|\(\.o$$\)\|\( [aUw] \)\|\(\.\.ng$$\)\|\(LASH[RL]DI\)' | \
		sort > System.map
ifdef MV_OUTPUT
		$(ELFCPY)
endif

install:	all

concat_srec:	concat_bin
		$(OBJCOPY) ${OBJCFLAGS} --adjust-vma 0xbfc00000 -I binary -O srec $< $@

install_2stage:	concat_srec

#########################################################################
else
all install u-boot u-boot.srec depend dep:
	@echo "System not configured - see README" >&2
	@ exit 1
endif

#########################################################################

unconfig:
	@rm -f include/config.h include/config.mk board/*/config.tmp board/*/*/config.tmp

#========================================================================
# PowerPC
#========================================================================

#########################################################################
## MPC5xx Systems
#########################################################################

#########################################################################
## MPC5xxx Systems
#########################################################################

#########################################################################
## MPC8xx Systems
#########################################################################


#########################################################################
## PPC4xx Systems
#########################################################################

#########################################################################
## MPC8220 Systems
#########################################################################

#########################################################################
## MPC824x Systems
#########################################################################

#########################################################################
## MPC8260 Systems
#########################################################################

#========================================================================
# M68K
#========================================================================
#########################################################################
## Coldfire
#########################################################################

#########################################################################
## MPC83xx Systems
#########################################################################

#########################################################################
## MPC85xx Systems
#########################################################################

#########################################################################
## 74xx/7xx Systems
#########################################################################

#========================================================================
# ARM
#========================================================================
#########################################################################
## StrongARM Systems
#########################################################################

#########################################################################
## ARM92xT Systems
#########################################################################

#########################################################################
## ARM720T Systems
#########################################################################

#########################################################################
## XScale Systems
#########################################################################

#########################################################################
## ARM1136 Systems
#########################################################################

#========================================================================
# i386
#========================================================================
#########################################################################
## AMD SC520 CDP
#########################################################################

#========================================================================
# MIPS
#========================================================================
#########################################################################
## MIPS32 4Kc
#########################################################################

#########################################################################
## MIPS32 AU1X00
#########################################################################

#########################################################################
## MIPS64 Octeon
#########################################################################
octeon_cn3010_evb_hs5		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_OCTEON_CN3010_EVB_HS5 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@./mkconfig -a octeon_cn3010_evb_hs5 octeon octeon octeon_cn3010_evb_hs5
	@ echo "TEXT_BASE = 0xbfc00000" > board/octeon_cn3010_evb_hs5/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/octeon_cn3010_evb_hs5/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/octeon_cn3010_evb_hs5/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/octeon_cn3010_evb_hs5/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/octeon_cn3010_evb_hs5/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

octeon_bbgw_ref		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_OCTEON_BBGW_REF 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@./mkconfig -a octeon_bbgw_ref octeon octeon octeon_bbgw_ref
	@ echo "TEXT_BASE = 0xbfc00000" > board/octeon_bbgw_ref/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/octeon_bbgw_ref/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/octeon_bbgw_ref/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/octeon_bbgw_ref/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/octeon_bbgw_ref/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

palomino		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_PALOMINO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@./mkconfig -a palomino octeon octeon palomino
	@ echo "TEXT_BASE = 0xbfc00000" > board/palomino/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/palomino/config.tmp
	@ echo "MODEL = ap12x" >> board/palomino/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/palomino/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

palomino128		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_PALOMINO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@./mkconfig -a palomino128 octeon octeon palomino128
	@ echo "TEXT_BASE = 0xbfc00000" > board/palomino128/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/palomino128/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/palomino128/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/palomino128/config.tmp
	@ echo "MODEL = ap12x-128" >> board/palomino128/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/palomino128/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

palomino_stage1		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_PALOMINO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@echo "#define CONFIG_STAGE1  1" >>include/config.h
	@./mkconfig -a palomino octeon octeon palomino
	@ echo "TEXT_BASE = 0xbfc00000" > board/palomino/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE = APBoot (stage1)" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage1" >> board/palomino/config.tmp
	@ echo "MODEL = ap12x" >> board/palomino/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/palomino/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

palomino_stage2		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_PALOMINO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
#	@echo "#define CONFIG_NO_CLEAR_DDR  1" >>include/config.h
	@echo "#define CONFIG_NO_RELOCATION  1" >>include/config.h
	@echo "#define CONFIG_RAM_RESIDENT  1" >>include/config.h
	@echo "#define CONFIG_STAGE2  1" >>include/config.h
	@./mkconfig -a palomino octeon octeon palomino
	@ echo "TEXT_BASE = 0x83e00000" > board/palomino/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage2" >> board/palomino/config.tmp
	@ echo "MODEL = ap12x" >> board/palomino/config.tmp
	@ echo "COMPRESS_TYPE = bzip2" >> board/palomino/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

moscato		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_MOSCATO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@./mkconfig -a moscato octeon octeon moscato
	@ echo "TEXT_BASE = 0xbfc00000" > board/moscato/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/moscato/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/moscato/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/moscato/config.tmp
	@ echo "MODEL = rap5" >> board/moscato/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/moscato/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

moscato_stage1		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_MOSCATO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@echo "#define CONFIG_STAGE1  1" >>include/config.h
	@./mkconfig -a moscato octeon octeon moscato
	@ echo "TEXT_BASE = 0xbfc00000" > board/moscato/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/moscato/config.tmp
	@ echo "BOOT_TYPE = APBoot (stage1)" >> board/moscato/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage1" >> board/moscato/config.tmp
	@ echo "MODEL = rap5" >> board/moscato/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/moscato/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

moscato_stage2		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_MOSCATO 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
#	@echo "#define CONFIG_NO_CLEAR_DDR  1" >>include/config.h
	@echo "#define CONFIG_NO_RELOCATION  1" >>include/config.h
	@echo "#define CONFIG_RAM_RESIDENT  1" >>include/config.h
	@echo "#define CONFIG_STAGE2  1" >>include/config.h
	@./mkconfig -a moscato octeon octeon moscato
	@ echo "TEXT_BASE = 0x87e00000" > board/moscato/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/moscato/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/moscato/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage2" >> board/moscato/config.tmp
	@ echo "MODEL = rap5" >> board/moscato/config.tmp
	@ echo "COMPRESS_TYPE = bzip2" >> board/moscato/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

jura_o		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_JURA_O 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@./mkconfig -a jura_o octeon octeon jura_o
	@ echo "TEXT_BASE = 0xbfc00000" > board/jura_o/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/jura_o/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/jura_o/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/jura_o/config.tmp
	@ echo "MODEL = ap12x" >> board/jura_o/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/jura_o/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

jura_o_stage1		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_JURA_O 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
	@echo "#define CONFIG_STAGE1  1" >>include/config.h
	@./mkconfig -a jura_o octeon octeon jura_o
	@ echo "TEXT_BASE = 0xbfc00000" > board/jura_o/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/jura_o/config.tmp
	@ echo "BOOT_TYPE = APBoot (stage1)" >> board/jura_o/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage1" >> board/jura_o/config.tmp
	@ echo "MODEL = ap12x" >> board/jura_o/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/jura_o/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

jura_o_stage2		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_JURA_O 1" >>include/config.h
	@echo "#define CONFIG_ARUBA_OCTEON 1" >>include/config.h
	@echo "#define CONFIG_OCTEON_PCI_HOST  1" >>include/config.h
#	@echo "#define CONFIG_NO_CLEAR_DDR  1" >>include/config.h
	@echo "#define CONFIG_NO_RELOCATION  1" >>include/config.h
	@echo "#define CONFIG_RAM_RESIDENT  1" >>include/config.h
	@echo "#define CONFIG_STAGE2  1" >>include/config.h
	@./mkconfig -a jura_o octeon octeon jura_o
	@ echo "TEXT_BASE = 0x83e00000" > board/jura_o/config.tmp
	@ echo "OCTEON_3010 = 1" >> board/jura_o/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/jura_o/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage2" >> board/jura_o/config.tmp
	@ echo "MODEL = ap12x" >> board/jura_o/config.tmp
	@ echo "COMPRESS_TYPE = bzip2" >> board/jura_o/config.tmp
	@ echo "APBOOT = true" >> include/config.mk


#########################################################################
## MIPS64 5Kc
#########################################################################

purple_config :		unconfig
	@./mkconfig $(@:_config=) mips mips purple

#########################################################################
## MIPS32 AR7100 (24K)
#########################################################################
tb225_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a tb225 mips mips tb225 ar7100 ar7100

pb42_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a pb42 mips mips pb42 ar7100 ar7100

tb243_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@echo "#define CONFIG_AR9100 1" >>include/config.h
	@./mkconfig -a tb243 mips mips tb243 ar7100 ar7100

ap83_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@echo "#define CONFIG_AR9100 1" >>include/config.h
	@./mkconfig -a ap83 mips mips ap83 ar7100 ar7100

ap81_config		: 	unconfig
	@ >include/config.h
	@echo '#ifndef _INCLUDE_CONFIG_H' >>include/config.h
	@echo '#define _INCLUDE_CONFIG_H' >>include/config.h
	@echo '#define CONFIG_AR7100 1' >>include/config.h
	@echo '#define CONFIG_AR9100 1' >>include/config.h
ifeq ($(BUILD_CONFIG), _4m)
	@echo '#define BUILD_CONFIG_OVERRIDE 1' >>include/config.h
	@echo '#define CFG_FLASH_SIZE 0x00400000' >>include/config.h
	@echo '#define CONFIG_BOOTARGS "console=ttyS0,115200 root=31:02 rootfstype=jffs2 init=/sbin/init mtdparts=ar7100-nor0:256k(u-boot),64k(u-boot-env),2688k(rootfs),1024k(uImage),64k(ART)"' >>include/config.h
	@echo '#define MTDPARTS_DEFAULT "mtdparts=ar7100-nor0:256k(u-boot),64k(u-boot-env),2688k(rootfs),1024k(uImage),64k(ART)"' >>include/config.h
	@echo '#define CONFIG_BOOTCOMMAND "bootm 0xbf300000"' >>include/config.h
endif
	@echo '#endif /* _INCLUDE_CONFIG_H */' >>include/config.h
	@./mkconfig -a ap81 mips mips ap81 ar7100 ar7100

ap94_config		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a ap94 mips mips ap94 ar7100 ar7100
	@ echo "TEXT_BASE = 0xbfc00000" > board/palomino/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/palomino/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/palomino/config.tmp
	@ echo "MODEL = ap10x" >> board/palomino/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

ap94min_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a ap94min mips mips ap94 ar7100 ar7100

pb45_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a pb45 mips mips pb45 ar7100 ar7100

ap96_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a ap96 mips mips ap96 ar7100 ar7100

cus97_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@echo "#define CONFIG_AR9100 1" >>include/config.h
	@./mkconfig -a cus97 mips mips cus97 ar7100 ar7100
ar7240_emu_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a ar7240_emu mips mips ar7240_emu ar7240 ar7240

wasp_emu_config			: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
	@./mkconfig -a wasp_emu mips mips wasp_emu ar7240 ar7240

db12x_config			: 	unconfig
	@ >include/config.h

ifeq ($(ETH_CONFIG2), _s17)
	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
else
ifeq ($(ETH_CONFIG), _s17)
	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
endif
ifeq ($(ETH_CONFIG2), _s17_hwaccel)
	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
else
ifeq ($(ETH_CONFIG), _s17_hwaccel)
	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
endif
ifeq ($(ETH_CONFIG), _s16)
	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
ifeq ($(ETH_CONFIG), _f1e)
	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
ifeq ($(ETH_CONFIG), _f2e)
	@echo '#define CONFIG_F2E_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif

ifeq ($(ETH_CONFIG), _vir)
	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
ifeq ($(ETH_CONFIG), _s27)
	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
endif

ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
	@echo '#define CONFIG_MI124 1' >>include/config.h
endif
ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
	@echo '#define CONFIG_AP123 1' >>include/config.h
endif
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
ifdef BOOT_FROM_NAND
	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
ifeq ($(BUILD_TYPE),jffs2)
	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
else
	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
endif
endif
#
# U-Boot from spi flash. Kernel & FS in NAND
#
ifdef ATH_DUAL_FLASH
	@echo "#define ATH_DUAL_FLASH 1" >>include/config.h
ifeq ($(BUILD_TYPE),jffs2)
	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
else
	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
endif
endif
ifdef FLASH_SIZE
	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
endif
ifeq ($(DB12X_P2P_ENV), 1)
	@echo "#define CONFIG_DB12X_P2P 1" >>include/config.h
endif

	@./mkconfig -a db12x mips mips db12x ar7240 ar7240

ap123_config			: 	unconfig
	@ >include/config.h
ifeq ($(ETH_CONFIG2), _s17)
	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
else
ifeq ($(ETH_CONFIG), _s17)
	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
endif
ifeq ($(ETH_CONFIG), _s16)
	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
ifeq ($(ETH_CONFIG), _f1e)
	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
ifeq ($(ETH_CONFIG), _vir)
	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
endif
ifeq ($(ETH_CONFIG), _s27)
	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
endif

ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
	@echo '#define CONFIG_MI124 1' >>include/config.h
endif
	@echo '#define CONFIG_AP123 1' >>include/config.h
	@echo '#define CONFIG_ROOTFS_TYPE "rootfstype=squashfs"' >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
ifdef FLASH_SIZE
	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
endif

ifdef BOOT_FROM_NAND
	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
ifeq ($(BUILD_TYPE),jffs2)
	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
else
	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
endif
endif
#
# U-Boot from spi flash. Kernel & FS in NAND
#
ifdef ATH_DUAL_FLASH
	@echo "#define ATH_DUAL_FLASH 1" >>include/config.h
ifeq ($(BUILD_TYPE),jffs2)
	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
else
	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
endif
endif
	@./mkconfig -a db12x mips mips db12x ar7240 ar7240



ap91_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a ap91 mips mips ap91 ar7240 ar7240
ap93_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a ap93 mips mips ap93 ar7240 ar7240
wrt54g_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a wrt54g mips mips wrt54g ar7240 ar7240
tb317_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a tb317 mips mips tb317 ar7240 ar7240
tb327_config		: 	unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a tb327 mips mips tb327 ar7240 ar7240

talisker: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_TALISKER 1" >>include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a talisker mips mips talisker ar7100 ar7100
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7100/talisker/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7100/talisker/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7100/talisker/config.tmp
	@ echo "MODEL = ap10x" >> board/ar7100/talisker/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7100/talisker/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

talisker_stage1: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_TALISKER 1" >>include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@echo "#define CONFIG_STAGE1  1" >>include/config.h
	@./mkconfig -a talisker mips mips talisker ar7100 ar7100
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7100/talisker/config.tmp
	@ echo "BOOT_TYPE = APBoot (stage1)" >> board/ar7100/talisker/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage1" >> board/ar7100/talisker/config.tmp
	@ echo "MODEL = ap10x" >> board/ar7100/talisker/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7100/talisker/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

talisker_stage2: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_TALISKER 1" >>include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@echo "#define CONFIG_NO_RELOCATION  1" >>include/config.h
	@echo "#define CONFIG_RAM_RESIDENT  1" >>include/config.h
	@echo "#define CONFIG_STAGE2  1" >>include/config.h
	@./mkconfig -a talisker mips mips talisker ar7100 ar7100
	@ echo "TEXT_BASE = 0x87e00000" > board/ar7100/talisker/config.tmp
	@ echo "BOOT_TYPE = APBoot (stage2)" >> board/ar7100/talisker/config.tmp
	@ echo "BOOT_TYPE_LC = apboot_stage2" >> board/ar7100/talisker/config.tmp
	@ echo "MODEL = ap10x" >> board/ar7100/talisker/config.tmp
	@ echo "COMPRESS_TYPE = bzip2" >> board/ar7100/talisker/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

pb44: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_TALISKER 1" >>include/config.h
	@echo "#define CONFIG_PB44 1" >>include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@./mkconfig -a pb44 mips mips pb44 ar7100 ar7100
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7100/pb44/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7100/pb44/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7100/pb44/config.tmp
	@ echo "MODEL = ap10x" >> board/ar7100/pb44/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7100/pb44/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

jura_r: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_JURA_R 1" >>include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@echo "#define JURA_PCI_SCAN_WORKAROUND 1" >>include/config.h
	@./mkconfig -a jura_r mips mips jura_r ar7100 ar7100
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7100/jura_r/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7100/jura_r/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7100/jura_r/config.tmp
	@ echo "MODEL = ap18x" >> board/ar7100/jura_r/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7100/jura_r/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

pb93: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_PB93 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a pb93 mips mips pb93 ar7240 ar7240
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7240/pb93/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/pb93/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/pb93/config.tmp
	@ echo "MODEL = ap9x" >> board/ar7240/pb93/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/pb93/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

pb9x: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_PB9X 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a pb9x mips mips pb9x ar7240 ar7240
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7240/pb9x/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/pb9x/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/pb9x/config.tmp
	@ echo "MODEL = ap9x" >> board/ar7240/pb9x/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/pb9x/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

scapa: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_SCAPA 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a scapa mips mips scapa ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/scapa/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/scapa/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/scapa/config.tmp
	@ echo "MODEL = ap9x" >> board/ar7240/scapa/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/scapa/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

scapa16: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_SCAPA 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a scapa16 mips mips scapa ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/scapa/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/scapa/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/scapa/config.tmp
	@ echo "MODEL = ap9x_16M" >> board/ar7240/scapa/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/scapa/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

scapa_h: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_SCAPA_H 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a scapa_h mips mips scapa_h ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/scapa_h/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/scapa_h/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/scapa_h/config.tmp
	@ echo "MODEL = ap93h" >> board/ar7240/scapa_h/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/scapa_h/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

blueblood: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_BLUEBLOOD 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a blueblood mips mips blueblood ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/blueblood/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/blueblood/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/blueblood/config.tmp
	@ echo "MODEL = ap68" >> board/ar7240/blueblood/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/blueblood/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

blueblood16: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_BLUEBLOOD 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a blueblood16 mips mips blueblood ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/blueblood/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/blueblood/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/blueblood/config.tmp
	@ echo "MODEL = ap68_16M" >> board/ar7240/blueblood/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/blueblood/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

scarran: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_SCAPA 1" >>include/config.h
	@echo "#define CONFIG_SCARRAN 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a scapa mips mips scapa ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/scapa/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/scapa/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/scapa/config.tmp
	@ echo "MODEL = ap9x" >> board/ar7240/scapa/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/scapa/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

pb93_config           :       unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
ifdef FLASH_SIZE
	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
endif
	@./mkconfig -a pb93 mips mips pb93 ar7240 ar7240

ap99_config           :       unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
ifdef FLASH_SIZE
	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
endif
	@./mkconfig -a ap99 mips mips ap99 ar7240 ar7240

ap101_config             :       unconfig
	@ >include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a ap101 mips mips ap101 ar7240 ar7240

msr2k: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_MSR2K 1" >>include/config.h
	@echo "#define CONFIG_AR7100 1" >>include/config.h
	@[ -z $(MSR_SUBTYPE) ] || \
		echo "#define CONFIG_MSR_SUBTYPE $(MSR_SUBTYPE)" >>include/config.h
	@./mkconfig -a msr2k mips mips msr2k ar7100 ar7100
	@ echo "TEXT_BASE = 0xbf000000" > board/ar7100/msr2k/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7100/msr2k/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7100/msr2k/config.tmp
	@ if [ "$(MSR_SUBTYPE)" = "1200" ]; then \
		echo "MODEL = MSR1200" >> board/ar7100/msr2k/config.tmp ;\
	fi
	@ if [ "$(MSR_SUBTYPE)" = "2000" ]; then \
		echo "MODEL = MSR2000" >> board/ar7100/msr2k/config.tmp ;\
	fi
	@ if [ "$(MSR_SUBTYPE)" = "4000" ]; then \
		echo "MODEL = MSR4000" >> board/ar7100/msr2k/config.tmp ;\
	fi
	@ if [ "$(MSR_SUBTYPE)" = "200" ]; then \
		echo "MODEL = MST200" >> board/ar7100/msr2k/config.tmp ;\
	fi
	@ if [ "$(MSR_SUBTYPE)" = "201" ]; then \
		echo "MODEL = MST200AC" >> board/ar7100/msr2k/config.tmp;\
	fi
	@ if [ "$(MSR_SUBTYPE)" = "" ]; then \
		echo "MODEL = ap175x" >> board/ar7100/msr2k/config.tmp ;\
	fi
	@ echo "COMPRESS_TYPE = none" >> board/ar7100/msr2k/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@[ -z $(MSR_SUBTYPE) ] || \
		{ echo "MESHOS_SUPPORT = true" >> include/config.mk ;\
		  echo "MESHOS_DUALFLASH_SUPPORT = true" >> include/config.mk ;\
		}
	@ if [ "$(MSR_SUBTYPE)" = "201" ]; then \
		echo "MV88E1XXX_PHY_SUPPORT = true" >> include/config.mk ;\
	fi

cardhu: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_CARDHU 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a cardhu mips mips cardhu ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/cardhu/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/cardhu/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/cardhu/config.tmp
	@ echo "MODEL = rap3x" >> board/ar7240/cardhu/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/cardhu/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

dalmore: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_DALMORE 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a dalmore mips mips dalmore ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/dalmore/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/dalmore/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/dalmore/config.tmp
	@ echo "MODEL = rap108" >> board/ar7240/dalmore/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/dalmore/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

dalmore_lte: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_DALMORE 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a dalmore_lte mips mips dalmore_lte ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/dalmore_lte/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/dalmore_lte/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/dalmore_lte/config.tmp
	@ echo "MODEL = rap109l" >> board/ar7240/dalmore_lte/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/dalmore_lte/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

hazelburn: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_HAZELBURN 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a hazelburn mips mips hazelburn ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/hazelburn/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/hazelburn/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/hazelburn/config.tmp
	@ echo "MODEL = ap103" >> board/ar7240/hazelburn/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/hazelburn/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

hazelburn_h: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_HAZELBURN 1" >>include/config.h
	@echo "#define CONFIG_HAZELBURN_H 1" >>include/config.h
	@echo "#define CONFIG_WASP 1" >>include/config.h
	@echo "#define CONFIG_AR7240 1" >>include/config.h
	@./mkconfig -a hazelburn_h mips mips hazelburn_h ar7240 ar7240
	@ echo "TEXT_BASE = 0x9f000000" > board/ar7240/hazelburn_h/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/ar7240/hazelburn_h/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/ar7240/hazelburn_h/config.tmp
	@ echo "MODEL = ap103h" >> board/ar7240/hazelburn_h/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/ar7240/hazelburn_h/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

ardbeg: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_ATHEROS 1" >>include/config.h
	@echo "#define CONFIG_MACH_QCA955x 1" >>include/config.h
	@echo "#define CFG_INIT_STACK_IN_SRAM 1" >>include/config.h
	@echo "#define CONFIG_ARDBEG 1" >>include/config.h
	@echo '#define __CONFIG_BOARD_NAME $@' >>include/config.h
	@echo '#define CONFIG_BOARD_NAME "$@"' >>include/config.h
	@echo '#define CFG_PLL_FREQ		CFG_PLL_720_600_200'	>>include/config.h
	@echo '#define CONFIG_ATHRS17_PHY       1'      >>include/config.h
	@echo '#define CFG_ATH_GMAC_NMACS 1'	>>include/config.h
	@echo "#define CONFIG_ATH_S17_WAN 1" >> include/config.h
#	@echo '#define ATH_RGMII_CAL 1'	>>include/config.h
	@./mkconfig -a -a ardbeg mips mips ardbeg atheros
	@ >board/atheros/ardbeg/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/atheros/ardbeg/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/atheros/ardbeg/config.tmp
	@ echo "MODEL = ap11x" >> board/atheros/ardbeg/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/atheros/ardbeg/config.tmp
	@ echo "TEXT_BASE = 0x9f000000" >> board/atheros/ardbeg/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

bowmore: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_ATHEROS 1" >>include/config.h
	@echo "#define CONFIG_MACH_QCA955x 1" >>include/config.h
	@echo "#define CFG_INIT_STACK_IN_SRAM 1" >>include/config.h
	@echo "#define CONFIG_BOWMORE 1" >>include/config.h
	@echo '#define __CONFIG_BOARD_NAME $@' >>include/config.h
	@echo '#define CONFIG_BOARD_NAME "$@"' >>include/config.h
	@echo '#define CFG_PLL_FREQ		CFG_PLL_720_600_200'	>>include/config.h
	@echo '#define CONFIG_ATHRS17_PHY       1'      >>include/config.h
	@echo '#define CFG_ATH_GMAC_NMACS 1'	>>include/config.h
#	@echo '#define ATH_RGMII_CAL 1'	>>include/config.h
	@./mkconfig -a -a bowmore mips mips bowmore atheros
	@ >board/atheros/bowmore/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/atheros/bowmore/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/atheros/bowmore/config.tmp
	@ echo "MODEL = ap21x" >> board/atheros/bowmore/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/atheros/bowmore/config.tmp
	@ echo "TEXT_BASE = 0x9f000000" >> board/atheros/bowmore/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

#========================================================================
# Nios
#========================================================================
#########################################################################
## Nios32
#########################################################################

#########################################################################
## Nios-II
#########################################################################

#========================================================================
# MicroBlaze
#========================================================================
#########################################################################
## Microblaze
#########################################################################

#########################################################################
## Blackfin
#########################################################################

#########################################################################
#########################################################################
#########################################################################

MV64XXX_PPC_LE_config \
MV64XXX_PPC_config :  unconfig
	@./mkconfig MV64XXX_PPC ppc 74xx_7xx db64xxx_ppc Marvell
	@[ -z "$(findstring LE,$@)" ] || \
		{ echo "CONFIG_MARVELL_LE = y" >>include/config.mk ;\
		  echo "export CONFIG_MARVELL_LE" >> include/config.mk ;\
		  echo "** Little Endian ** config " ; \
		}
	@[ -z "$(findstring MV64XXX_PPC,$@)" ] || \
		{ echo "CROSS_COMPILE  = powerpc-linux-" >> include/config.mk ;\
		  echo "export CROSS_COMPILE" >> include/config.mk ; \
		  echo "using powerpc-linux- cross compiler" ;\
		}

p1010rdb		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_P1010RDB 1" >>include/config.h
	@./mkconfig -a P1010RDB ppc mpc85xx p1010rdb freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/p1010rdb/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/p1010rdb/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/p1010rdb/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/p1010rdb/config.tmp
	@ echo "APBOOT = true" >> include/config.mk


p1020wlan		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_P1020WLAN 1" >>include/config.h
	@./mkconfig -a p1020wlan ppc mpc85xx p1020wlan freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/p1020wlan/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/p1020wlan/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/p1020wlan/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/p1020wlan/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

p1_p2_rdb_pc		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_P1020RDB 1" >>include/config.h
	@./mkconfig -a p1_p2_rdb_pc ppc mpc85xx p1_p2_rdb_pc freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/p1_p2_rdb_pc/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/p1_p2_rdb_pc/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/p1_p2_rdb_pc/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/p1_p2_rdb_pc/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

ardmore		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_ARDMORE 1" >>include/config.h
	@ echo "#define __ARDMORE_DRAM__ 512" >> include/config.h
	@./mkconfig -a ardmore ppc mpc85xx ardmore freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/ardmore/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/ardmore/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/ardmore/config.tmp
	@ echo "MODEL = ap22x" >> board/freescale/ardmore/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/ardmore/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

ardmore256	: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_ARDMORE 1" >>include/config.h
	@ echo "#define __ARDMORE_DRAM__ 256" >> include/config.h
	@./mkconfig -a ardmore ppc mpc85xx ardmore freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/ardmore/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/ardmore/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/ardmore/config.tmp
	@ echo "MODEL = ap22x-256mb" >> board/freescale/ardmore/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/ardmore/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

k2		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_K2 1" >>include/config.h
	@ echo "#define __K2_DRAM__ 512" >> include/config.h
	@./mkconfig -a k2 ppc mpc85xx k2 freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/k2/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/k2/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/k2/config.tmp
	@ echo "MODEL = ap27x" >> board/freescale/k2/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/k2/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

tomatin		: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_TOMATIN 1" >>include/config.h
	@ echo "#define __TOMATIN_DRAM__ 256" >> include/config.h
	@ echo "#define __TOMATIN_FLASH__ 32" >> include/config.h
	@./mkconfig -a tomatin ppc mpc85xx tomatin freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/tomatin/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/tomatin/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/tomatin/config.tmp
	@ echo "MODEL = ap21x" >> board/freescale/tomatin/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/tomatin/config.tmp
	@ echo "APBOOT = true" >> include/config.mk

tomatin16	: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_TOMATIN 1" >>include/config.h
	@ echo "#define __TOMATIN_DRAM__ 256" >> include/config.h
	@ echo "#define __TOMATIN_FLASH__ 16" >> include/config.h
	@./mkconfig -a tomatin ppc mpc85xx tomatin freescale
	@ echo "TEXT_BASE = 0xeff80000" > board/freescale/tomatin/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/freescale/tomatin/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/freescale/tomatin/config.tmp
	@ echo "MODEL = ap21x-16mb" >> board/freescale/tomatin/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/freescale/tomatin/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "VARIANT = 16" >> include/config.mk

octomore: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@ echo "#define CONFIG_OCTOMORE 1" >>include/config.h
	@ echo "#define CONFIG_MACH_IPQ806x 1" >>include/config.h 
	@ echo "#define __OCTMORE_DRAM__ 1024" >> include/config.h
	@./mkconfig -a octomore arm armv7 octomore qca ipq806x
	@ echo "TEXT_BASE = 0x41200000" > board/qca/octomore/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/qca/octomore/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/qca/octomore/config.tmp
	@ echo "MODEL = ap32x" >> board/qca/octomore/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/qca/octomore/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk

eiger: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@ echo "#define CONFIG_EIGER 1" >>include/config.h
	@ echo "#define CONFIG_MACH_IPQ806x 1" >>include/config.h 
	@ echo "#define __EIGER_DRAM__ 1024" >> include/config.h
	@./mkconfig -a eiger arm armv7 eiger qca ipq806x
	@ echo "TEXT_BASE = 0x41200000" > board/qca/eiger/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/qca/eiger/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/qca/eiger/config.tmp
	@ echo "MODEL = ap385" >> board/qca/eiger/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/qca/eiger/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk

glenfarclas: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@ echo "#define CONFIG_GLENFARCLAS 1" >>include/config.h
	@ echo "#define CONFIG_MACH_IPQ806x 1" >>include/config.h
	@./mkconfig -a glenfarclas arm armv7 glenfarclas qca ipq806x
	@ echo "TEXT_BASE = 0x41200000" > board/qca/glenfarclas/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/qca/glenfarclas/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/qca/glenfarclas/config.tmp
	@ echo "MODEL = ap31x" >> board/qca/glenfarclas/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/qca/glenfarclas/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk

#########################################################################
## Marvell KW based Socs
#########################################################################

ifeq ($(CROSS),armlinux)
else
CSL = /opt/sdk-le/targets/arm-mv5sft-linux-gnueabi/cross/bin/arm-mv5sft-linux-gnueabi-
CSLBE = ${ARUBA_SRC}/tools/armeb-linux-gnu-uClibc-0.9.30/usr/bin/armeb-linux-
endif

rd88f6281a_config \
db88f6281abp_config \
rd88f6282a_config \
db88f6282bp_config \
db88f6280abp_config \
rd88f6192a_config \
db88f6192abp_config \
db88f6180abp_config \
rd88f6190a_config \
db88f6190abp_config \
rd88f6281apcac_config \
rd88f6281Sheevaplug_config \
db88f6281customer_config \
db88f6192customer_config \
db88f6180customer_config \
:
	@$(MAKE) -s mv_kw RULE=$@

aruba_6282:
	@$(MAKE) -s mv_kw RULE=$@ BE=1 SPIBOOT=1 NAND=0 USB=0

arran_6282:
	@$(MAKE) -s mv_kw RULE=$@ BE=1 SPIBOOT=1 NAND=0 USB=0 DDR3=1

mv_kw:	unconfig
	@./mkconfig $(@:_config=) arm arm926ejs config_kw mv_feroceon;
	@cp -f board/mv_feroceon/config_kw/config_def.mk board/mv_feroceon/config_kw/config.mk;
	@echo "MV_OUTPUT = $(RULE:_config=)" >> include/config.mk;	\
#=======================
# Soc Compilation flag
#=======================
	@[ -z "$(findstring 6281,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV88F6281" >> include/config.mk;	\
		  echo "** MV_88F6281 image ** config " ; \
		}
	@[ -z "$(findstring 6280,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV88F6280" >> include/config.mk;	\
		  echo "** MV_88F6280 image ** config " ; \
		}
	@[ -z "$(findstring 6192,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV88F6192" >> include/config.mk;	\
		  echo "** MV_88F6192 image ** config " ; \
		}
	@[ -z "$(findstring 6190,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV88F6190" >> include/config.mk;	\
		  echo "** MV_88F6190 image ** config " ; \
		}
	@[ -z "$(findstring 6180,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV88F6180" >> include/config.mk;	\
		  echo "** MV_88F6180 image ** config " ; \
		}
	@[ -z "$(findstring 6282,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV88F6282" >> include/config.mk;	\
		  echo "** MV_88F6282 image ** config " ; \
		}
#=======================
# Board Compilation flags
#=======================
	@[ -z "$(findstring db88f6281abp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6281A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 400db" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6281A BP ** config " ; \
                }
	@[ -z "$(findstring db88f6280abp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6280A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200db6280" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6280A BP ** config " ; \
                }
	@[ -z "$(findstring rd88f6281a_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6281A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 400rd" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** RD 88F6281A ** config " ; \
                }
	@[ -z "$(findstring db88f6192abp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6192A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200db619x" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6192A BP ** config " ; \
                }
	@[ -z "$(findstring rd88f6192a_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6192A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200rd" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** RD 88F6192A ** config " ; \
                }
	@[ -z "$(findstring db88f6180abp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6180A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200db" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6180A BP ** config " ; \
                }
	@[ -z "$(findstring db88f6190abp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6190A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200db" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6190A BP ** config " ; \
                }
	@[ -z "$(findstring rd88f6190a_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6190A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200rd" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** RD 88F6190A ** config " ; \
                }
	@[ -z "$(findstring rd88f6281apcac_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6281A_PCAC" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 200pcac" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** RD 88F6281A PCAC ** config " ; \
                }
	@[ -z "$(findstring rd88f6281Sheevaplug_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6281A_SHEEVA_PLUG" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 400db" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** SHEEVA PLUG ** config " ; \
                }
	@[ -z "$(findstring db88f6282bp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6282A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 400ddr2db" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6282 BP ** config " ; \
                }
	@[ -z "$(findstring aruba_6282,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6282A" >> include/config.mk;  \
		  echo "MV_FLAGS += -DARUBA_ARM" >> include/config.mk;  \
		  echo "MV_FLAGS += -DCONFIG_APBOOT" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 400ddr2db" >> include/config.mk;	\
		  echo "APBOOT = true" >> include/config.mk;	\
		  echo "BOOT_TYPE = APBoot" >> include/config.mk; \
		  echo "BOOT_TYPE_LC = apboot" >> include/config.mk; \
		  echo "MODEL = ap13x" >> include/config.mk; \
		  echo "COMPRESS_TYPE = none" >> include/config.mk; \
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB 88F6282 BP ** config " ; \
                }
	@[ -z "$(findstring arran,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DCONFIG_ARRAN" >> include/config.mk;  \
		  echo "MV_FLAGS += -DARUBA_ARM" >> include/config.mk;  \
		  echo "MV_FLAGS += -DCONFIG_APBOOT" >> include/config.mk;  \
		  echo "MV_FLAGS += -DMV88F6282" >> include/config.mk;	\
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
		  echo "APBOOT = true" >> include/config.mk;	\
		  echo "BOOT_TYPE = APBoot" >> include/config.mk; \
		  echo "BOOT_TYPE_LC = apboot" >> include/config.mk; \
		  echo "MODEL = ap13x" >> include/config.mk; \
		  echo "COMPRESS_TYPE = none" >> include/config.mk; \
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** Arran ** config " ; \
                }
	@[ -z "$(findstring rd88f6282a_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6282A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = 400ddr2db" >> include/config.mk;	\
		  cp board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** RD 88F6282A ** config " ; \
                }
	@[ -z "$(findstring customer_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_CUSTOMER" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;	\
	          echo "MV_DDR_FREQ = customer" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_kw/u-boot-sec256k.lds board/mv_feroceon/config_kw/u-boot.lds;	\
		  echo "** DB CUSTOMER** config " ; \
                }

#==============================
# Little Endian Cross Compiler
#==============================
ifeq ($(BE),)
ifeq ($(CSL),)
	@echo "CROSS_COMPILE = ${ARUBA_SRC}/tools/armeb-linux-gnu-uClibc-0.9.30/usr/bin/armeb-linux-" >> include/config.mk;
else	
	@echo "CROSS_COMPILE = $(CSL)" >> include/config.mk;
endif
endif
#==============================
# Big Endian Cross Compiler
#==============================
ifeq ($(BE),1)
	@echo "MV_FLAGS += -mbig-endian -D__BE" >> include/config.mk;
	@echo "BIG_ENDIAN =y" >> include/config.mk;
	@echo "LDFLAGS += -EB" >> include/config.mk;
ifeq ($(CSLBE),)		
	@echo "CROSS_COMPILE = armeb-none-linux-gnueabi-" >> include/config.mk;	
else
	@echo "CROSS_COMPILE = $(CSLBE)"  >> include/config.mk;
endif	
	@echo "** Big Endian ** config ";
endif

#================
# CPU DDR Access
#================
ifeq ($(DDR_XBAR),1)
	@echo "DDR_ACCESS=_xbar" >> $(obj)include/config.mk;
 	@echo "  * CPU DRAM access through XBAR ";
endif

# DDR3 support
#=================
ifeq ($(DDR3),1)
ifeq ($(FREQ),400)
	echo "MV_DDR_FREQ = 400ddr3db" >> include/config.mk;
	@echo "** DDR3@400MHz support image ** config " ;
else
	echo "MV_DDR_FREQ = 533ddr3db" >> include/config.mk;
	@echo "** DDR3@533MHz support image ** config " ;
endif
endif

#=================
# USB support
#=================
ifeq ($(USB),1)
	@echo "MV_FLAGS += -DMV_USB -DCONFIG_CMD_USB" >> include/config.mk;
	@echo "MV_USB=y" >> include/config.mk;
	@echo "** With USB ** config " ;
endif
#=================
# NAND support
#=================
ifeq ($(NAND),1)
	@echo "** NAND support image ** config " ;
	@echo "MV_FLAGS += -DMV_NAND" >> include/config.mk;
endif
#=================
# Boot from NAND support
#=================
ifeq ($(NANDBOOT),1)
	@echo "** Boot from NAND support image ** config " ;
	@echo "MV_FLAGS += -DMV_NAND_BOOT" >> include/config.mk;
	@echo "MV_FLAGS += -DMV_NAND" >> include/config.mk;
	@echo "NAND_BOOT =y" >> include/config.mk;
	@cat board/mv_feroceon/config_kw/config_nand.mk >> board/mv_feroceon/config_kw/config.mk;
	cp -f board/mv_feroceon/config_kw/u-boot-sec128k.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
#=================
# SPI support
#=================
ifeq ($(SPI),1)
	@echo "** SPI support image ** config " ;
	@echo "MV_FLAGS += -DMV_SPI" >> include/config.mk;
endif
ifeq ($(SPIBOOT),1)
	@echo "** Boot from SPI support image ** config " ;
	@echo "MV_FLAGS += -DMV_SPI" >> include/config.mk;
	@echo "MV_FLAGS += -DMV_SPI_BOOT" >> include/config.mk;
	@echo "SPI_BOOT =y" >> include/config.mk;
endif
#=================
# MFlash support
#=================
ifeq ($(MFLASH),1)
	@echo "** MFLASH support image ** config " ;
	@echo "MV_FLAGS += -DMV_FLASH" >> include/config.mk;
endif
ifeq ($(MFLASHBOOT),1)
	@echo "** Boot from MFLASH support image ** config " ;
	@echo "MV_FLAGS += -DMV_FLASH" >> include/config.mk;
	@echo "MV_FLAGS += -DMV_FLASH_BOOT" >> include/config.mk;
endif
#=================
# BOOTROM support
#=================
#ifeq ($(BOOTROM),1)
#	@echo "** BOOTROM support image ** config " ;
#	@echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;
ifeq ($(NANDBOOT),1)
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header-nand.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header.lds board/mv_feroceon/config/u-boot.lds;
endif
#endif

#==========================
# Diagnostic tests support
#==========================
ifeq ($(DIAG),1)
	@echo "** diagnostic tests support image ** config " ;
	@echo "MV_FLAGS += -DCFG_DIAG" >> include/config.mk;
	@echo "CFG_DIAG=1" >> include/config.mk;
endif
#===================
# Tiny Image support
#===================
ifneq ($(TINY),)
	@echo "MV_FLAGS += -DMV_TINY_IMAGE" >> include/config.mk;
	@echo "MV_TINY_IMAGE=y" >> include/config.mk;
ifeq ($(TINY),256K_32K)
	@echo "** TINY image BootSize=256K SEC=32K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec32k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec32k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_32K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;
else
ifeq ($(TINY),256K_64K)
	@echo "** TINY image BootSize=256K SEC=64K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec64k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;
else
ifeq ($(TINY),512K_64K)
	@echo "** TINY image BootSize=512K SEC=64K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec64k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;
else
ifeq ($(TINY),4M_128K)
	@echo "** TINY image BootSize=4M SEC=128K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec128k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec128k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_4M" >> include/config.mk;
else
ifeq ($(TINY),8M_128K)
	@echo "** TINY image BootSize=8M SEC=128K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec128k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec128k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;
else
ifeq ($(TINY),16M_64K)
	@echo "** TINY image BootSize=16M SEC=64K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec64k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;
else
ifeq ($(TINY),16M_128K)
	@echo "** TINY image BootSize=16M SEC=128K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec128k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec128k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;
else
ifeq ($(TINY),256K_4K)
	@echo "** TINY image BootSize=256K SEC=4K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config/u-boot-sec4k-header-tiny.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec4k-tiny.lds board/mv_feroceon/config/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_4K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;
else
	@make mrproper;	
	@echo "" ;
	@echo "** ERROR : Illegal TINY image configuration" ;
	@echo "" ;
	@echo "Legal values for TINY are :" ;
	@echo "" ;
	@echo "512K_64K, 16M_64K, 16M_128K, 256K_32K or 256K_4K" ;
	@echo "" ;
endif
endif
endif
endif
endif
endif
endif
endif
endif
#=============================
# Summary of compilation flags
#=============================
	@echo -e "CPPFLAGS += \044(MV_IMAGE_FLAGS) \044(MV_FLAGS)" >> include/config.mk;

	
#########################################################################
## END of Marvell KW based Socs
#########################################################################

#########################################################################
## Marvell KW2 based Socs
#########################################################################

db88f6500bp_config \
rd88f6510sfu_config \
rd88f6560gw_config \
rd88f6530mdu_config \
kw2_test:
	@$(MAKE) -s mv_kw2 RULE=$@

aruba_6560:
	@$(MAKE) -s mv_kw2 RULE=$@ BE=1 SPIBOOT=1 NAND=0 USB=1 BOOTROM=1

aruba_6560_le:
	@$(MAKE) -s mv_kw2 RULE=aruba_6560 SPIBOOT=1 NAND=0 USB=0 BOOTROM=1

arran:
	$(MAKE) -s mv_kw2 RULE=$@ BE=1 SPIBOOT=1 NAND=0 USB=0 DDR3=1 BOOTROM=1 MV_BASE_ADDR=0x1000000 MV_ENTRY_ADDR=0x1080000

tamdhu:
	@$(MAKE) -s mv_kw2 RULE=$@ BE=1 SPIBOOT=1 NAND=0 USB=1 DDR3=1 BOOTROM=1 MV_BASE_ADDR=0x1000000 MV_ENTRY_ADDR=0x1080000

arran_le:
	@$(MAKE) -s mv_kw2 RULE=arran SPIBOOT=1 NAND=0 USB=0 DDR3=1 BOOTROM=1 MV_BASE_ADDR=0x1000000 MV_ENTRY_ADDR=0x1080000

mv_kw2:	unconfig
	@mkdir -p $(obj)include
#	@cp -f board/mv_feroceon/config_kw2/config_def.mk board/mv_feroceon/config_kw2/config.mk;
	@rm -f board/mv_feroceon/config_kw2/config.mk
	@sed "s/MV_BASE_ADDR/${MV_BASE_ADDR}/g" < board/mv_feroceon/config_kw2/config_def.mk > board/mv_feroceon/config_kw2/config.mk;
	@rm -f mv_base.mk
	@echo MV_BASE_ADDR=${MV_BASE_ADDR} > mv_base.mk
	@echo MV_ENTRY_ADDR=${MV_ENTRY_ADDR} >> mv_base.mk

#	@./mkconfig $(@:_config=) arm arm926ejs config_kw mv_feroceon;
#	@./mkconfig -a $(@:_config=) arm arm926ejs config_kw2 mv_feroceon feroceon;
	@./mkconfig -a $(@:_config=) arm arm926ejs config_kw2 mv_feroceon
	@echo "MV_OUTPUT = $(RULE:_config=)" >> $(obj)include/config.mk;
#=======================
# Soc Compilation flag
#=======================
	@if [ "$(findstring 6500,$(RULE))" ] ; then\
		echo "#define MV88F6500" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6500"; \
	elif [ "$(findstring 6510,$(RULE))" ] ; then \
		echo "#define MV88F6510" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6510"; \
	elif [ "$(findstring 6560,$(RULE))" ] ; then \
		echo "#define MV88F6560" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6560"; \
	elif [ "$(findstring arran,$(RULE))" ] ; then \
		echo "#define MV88F6560" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6560"; \
	elif [ "$(findstring bowmore,$(RULE))" ] ; then \
		echo "#define MV88F6560" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6560"; \
	elif [ "$(findstring tamdhu,$(RULE))" ] ; then \
		echo "#define MV88F6560" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6560"; \
	elif [ "$(findstring 6530,$(RULE))" ] ; then \
		echo "#define MV88F6530" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6530"; \
	elif [ "$(findstring test,$(RULE))" ] ; then \
		echo "#define MV88F6192" > $(obj)include/config.h ;	\
		echo "  * Configured for MV88F6192"; \
	else \
		echo "  * Error Marvell SoC not configured!"; \
	fi;
#=======================
# Board Compilation flags
#=======================
	@if [ "$(findstring db88f6500bp_config,$(RULE))" ] ; then\
		echo "#define DB_88F6500" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTSIZE_512K" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		if [ x$(DDR3) == x1 ]; then	\
			echo "MV_DDR_FREQ=533db_kw2" >> $(obj)include/config.mk ;\
		else	\
			echo "MV_DDR_FREQ=400db_kw2" >> $(obj)include/config.mk ;\
		fi;	\
		echo "NAND_TECH=M" >> $(obj)include/config.mk ;	\
		echo "BLK_SIZE=128" >> $(obj)include/config.mk ;	\
		echo "  * Configured for DB-88F6500-BP"; \
	elif [ "$(findstring rd88f6510sfu_config,$(RULE))" ] ; then \
		echo "#define RD_88F6510" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTSIZE_512K" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		echo "MV_DDR_FREQ=266rd_kw2" >> $(obj)include/config.mk ;	\
		echo "NAND_TECH=M" >> $(obj)include/config.mk ;	\
		echo "BLK_SIZE=128" >> $(obj)include/config.mk ;	\
		echo "  * Configured for RD-88F6510-SFU"; \
	elif [ "$(findstring rd88f6560gw_config,$(RULE))" ] ; then \
		echo "#define RD_88F6560" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTSIZE_512K" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		echo "MV_DDR_FREQ=533rd_kw2" >> $(obj)include/config.mk ;	\
		echo "NAND_TECH=M" >> $(obj)include/config.mk ;	\
		echo "BLK_SIZE=128" >> $(obj)include/config.mk ;	\
		echo "  * Configured for RD-88F6560-GW"; \
	elif [ "$(findstring aruba_6560,$(RULE))" ] ; then \
		echo "#define RD_88F6560" >> $(obj)include/config.h ;	\
		echo "MV_FLAGS += -DARUBA_ARM" >> include/config.mk;  \
		echo "MV_FLAGS += -DCONFIG_APBOOT" >> include/config.mk;  \
		echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	        echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		if [ x$(DDR3) == x1 ]; then	\
			echo "MV_DDR_FREQ=533db_kw2" >> $(obj)include/config.mk ;\
		else	\
			echo "MV_DDR_FREQ=400db_kw2" >> $(obj)include/config.mk ;\
		fi;	\
		echo "APBOOT = true" >> include/config.mk;	\
		echo "BOOT_TYPE = APBoot" >> include/config.mk; \
		echo "BOOT_TYPE_LC = apboot" >> include/config.mk; \
		echo "MODEL = rap15x" >> include/config.mk; \
		echo "COMPRESS_TYPE = none" >> include/config.mk; \
		echo "  * Configured for aruba_6560"; \
	elif [ "$(findstring arran,$(RULE))" ] ; then \
		echo "#define CONFIG_ARRAN" >> $(obj)include/config.h ;	\
		echo "MV_FLAGS += -DARUBA_ARM" >> include/config.mk;  \
		echo "MV_FLAGS += -DCONFIG_APBOOT" >> include/config.mk;  \
		echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	        echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		echo "MV_DDR_FREQ=arran" >> $(obj)include/config.mk ;	\
		echo "APBOOT = true" >> include/config.mk;	\
		echo "BOOT_TYPE = APBoot" >> include/config.mk; \
		echo "BOOT_TYPE_LC = apboot" >> include/config.mk; \
		echo "MODEL = ap13x" >> include/config.mk; \
		echo "COMPRESS_TYPE = none" >> include/config.mk; \
		echo "  * Configured for arran"; \
	elif [ "$(findstring tamdhu,$(RULE))" ] ; then \
		echo "#define CONFIG_TAMDHU" >> $(obj)include/config.h ;	\
		echo "MV_FLAGS += -DARUBA_ARM" >> include/config.mk;  \
		echo "MV_FLAGS += -DCONFIG_APBOOT" >> include/config.mk;  \
		echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	        echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_32M" >> include/config.mk;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		echo "MV_DDR_FREQ=tamdhu" >> $(obj)include/config.mk ;	\
		echo "APBOOT = true" >> include/config.mk;	\
		echo "BOOT_TYPE = APBoot" >> include/config.mk; \
		echo "BOOT_TYPE_LC = apboot" >> include/config.mk; \
		echo "MODEL = rap15x" >> include/config.mk; \
		echo "COMPRESS_TYPE = none" >> include/config.mk; \
		echo "  * Configured for tamdhu"; \
	elif [ "$(findstring rd88f6530mdu_config,$(RULE))" ] ; then \
		echo "#define RD_88F6530" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTSIZE_512K" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		echo "MV_DDR_FREQ=400rdmdu_kw2" >> $(obj)include/config.mk ;	\
		echo "  * Configured for RD-88F6530-MDU"; \
	elif [ "$(findstring kw2_test,$(RULE))" ] ; then \
		echo "#define DB_88F6192A" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTSIZE_512K" >> $(obj)include/config.h ;	\
		echo "#define MV_BOOTROM" >> $(obj)include/config.h ;	\
		echo "MV_DDR_FREQ=400rd_kw2" >> $(obj)include/config.mk ;	\
		echo "  * Configured for DB-88F6192A-BP"; \
	else \
		echo "  * Error no board was configured"; \
	fi;
#==============================
# Little Endian Cross Compiler
#==============================
ifeq ($(BE),)
	@echo "  * Little Endian byte ordering ";
ifeq ($(CSL),)
	@echo "CROSS_COMPILE = /opt/sdk-le/targets/arm-mv5sft-linux-gnueabi/cross/bin/arm-mv5sft-linux-gnueabi-" >> include/config.mk;
else	
	@echo "CROSS_COMPILE = $(CSL)" >> include/config.mk;
endif
endif
#==============================
# Big Endian Cross Compiler
#==============================
ifeq ($(BE),1)
	@echo "MV_FLAGS += -mbig-endian -D__BE" >> include/config.mk;
	@echo "#define MV_KW2_BE_ETH_WA" >> include/config.h;
	@echo "BIG_ENDIAN =y" >> include/config.mk;
	@echo "LDFLAGS += -EB" >> include/config.mk;
ifeq ($(CSLBE),)		
	@echo "CROSS_COMPILE = /opt/sdk-le/targets/arm-mv5sft-linux-gnueabi/cross/bin/arm-mv5sft-linux-gnueabi-" >> include/config.mk;
else
	@echo "CROSS_COMPILE = $(CSLBE)"  >> include/config.mk;
endif	
	@echo "  * Big Endian byte ordering ";
endif

# DDR3 support
#=================
ifeq ($(DDR3),1)
	@echo "DDR_TYPE=ddr3" >> $(obj)include/config.mk;
	@echo "  * DDR3 Support";
ifeq ($(FREQ),400)
	echo "MV_DDR_FREQ = 400ddr3db" >> include/config.mk;
	@echo "** DDR3@400MHz support image ** config " ;
else
	echo "MV_DDR_FREQ = 533ddr3db" >> include/config.mk;
	@echo "  * DDR3@533MHz support image ** config " ;
endif
else
	@echo "DDR_TYPE=ddr2" >> $(obj)include/config.mk;
	@echo "  * DDR2 Support";
endif
#=================
# USB support
#=================
ifeq ($(USB),1)
	@echo "#define MV_USB" >> $(obj)include/config.h;
	@echo "  * With USB support";
endif
#=================
# NAND support
#=================
# Boot from NAND support
ifeq ($(NANDBOOT),1)
	@echo "  * Boot from NAND support";
	@echo "#define MV_NAND_BOOT" >> $(obj)include/config.h ;
	@echo "NAND_BOOT = y" >> $(obj)include/config.mk ;
#	cp -f board/mv_feroceon/config_kw2/u-boot-sec256k.lds cpu/arm926ejs/u-boot.lds;
endif

ifeq ($(NAND),1)
	@echo "  * NAND support";
	@echo "#define MV_NAND" >> $(obj)include/config.h;

##NFC	@echo "      + NAND PIO Mode support";
##NFC	@echo "#define MV_NAND_PIO_MODE" >> $(obj)include/config.h;
##NFC	@echo "      + 1 CS NAND support" ;
##NFC	@echo "#define MV_NAND_1CS_MODE" >> $(obj)include/config.h ;
##NFC	@echo "      + 4 bit ECC NAND support" ;
##NFC	@echo "#define MV_NAND_4BIT_MODE" >> $(obj)include/config.h ;
endif

# NAND Small Page support
ifeq ($(NANDSP),1)
	@echo "  * Small Page NAND support";
	@echo "#define MV_SMALL_PAGE" >> $(obj)include/config.h ;
	@echo "CONFIG_NAND_SP = y" >> $(obj)include/config.mk
else
	@echo "  * Large Page NAND support";
	@echo "#define MV_LARGE_PAGE" >> $(obj)include/config.h ;
	@echo "CONFIG_NAND_LP = y" >> $(obj)include/config.mk
endif

#=================
# NFC support
#=================
ifeq ($(NFC),1)
	@echo "  * NAND Flash Controller Support";
	@echo "#define CONFIG_MV_NFC_SUPPORT" >> $(obj)include/config.h
else
	@echo "  * Legacy NAND Flash Controller Support";
	@echo "#define CONFIG_MV_LEGACY_NAND" >> $(obj)include/config.h
endif

#=================
# SPI support
#=================
ifeq ($(SPI),1)
	@echo "  * SPI support";
#	@echo "#define MV_SEC_256K" >> $(obj)include/config.h ;
	@echo "#define MV_SPI" >> $(obj)include/config.h;
endif
# Boot from SPI support
ifeq ($(SPIBOOT),1)
	@echo "  * Boot from SPI support";
#	@echo "#define MV_SEC_256K" >> $(obj)include/config.h ;
	@echo "#define MV_SPI" >> $(obj)include/config.h;
	@echo "#define MV_SPI_BOOT" >> $(obj)include/config.h;
	@echo "SPI_BOOT = y" >> $(obj)include/config.mk;
#	cp -f board/mv_feroceon/config_kw2/u-boot-sec256k.lds cpu/arm926ejs/u-boot.lds;
endif

#=================
# NOR support
#=================
# Boot from NOR support
ifeq ($(NORBOOT),1)
	@echo "  * Boot from NOR support";
	@echo "#define MV_SEC_128K" >> $(obj)include/config.h ;
	@echo "#define MV_NOR_BOOT" >> $(obj)include/config.h;
	@echo "NOR_BOOT = y" >> $(obj)include/config.mk;
	cp board/mv_feroceon/config_kw2/u-boot-sec128k.lds cpu/arm926ejs/u-boot.lds;
endif
ifeq ($(NOR),1)
	@echo "  * NOR support";
	@echo "#define MV_SEC_128K" >> $(obj)include/config.h ;
	@echo "#define MV_NOR" >> $(obj)include/config.h;
endif

#=================
# BOOTROM support
#=================
ifeq ($(BOOTROM),1)
	@echo "  * BOOTROM support";
	@echo "#define MV_BOOTROM" >> $(obj)include/config.h ;
ifeq ($(NBOOT),1)
	@cp -f board/mv_feroceon/config_kw2/u-boot-sec64k-header-nand.lds board/mv_feroceon/config_kw2/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw2/u-boot-sec256k.lds board/mv_feroceon/config_kw2/u-boot.lds;
endif
endif

	echo "#include <configs/mv_kw2.h>" >> $(obj)include/config.h;
	@echo -e "CPPFLAGS += \044(MV_IMAGE_FLAGS) \044(MV_FLAGS)" >> include/config.mk;
#########################################################################
## END of Marvell KW2 based Socs
#########################################################################
#########################################################################
## Marvell Feroceon based Socs
#########################################################################
# Parameters:  Target  Architecture  CPU  Board [VENDOR] [SOC] #
#

rd78XX0_PCAC_config \
rd78XX0_H3C_config \
rd78XX0_MP_H3C_config \
rd78XX0_AMC_config \
rd78200_MP_AMC_config \
rd78XX0_MASA_config \
rd78XX0_MP_MASA_config \
rd78XX0_MP_MASA_2DIMM_config \
rd78200_MP_MASA_config \
rd78200_MP_MASA_2DIMM_config \
db78200_MP_config \
db76100_config \
db78XX0_config \
db88f632x_config : 
	@$(MAKE) -s mv_dd RULE=$@
mv_dd:	unconfig
	@./mkconfig $(@:_config=) arm arm926ejs config_dd mv_feroceon;
	@cp -f board/mv_feroceon/config_dd/config_def.mk board/mv_feroceon/config_dd/config.mk;
	@cp -f board/mv_feroceon/config_dd/u-boot_def.lds board/mv_feroceon/config_dd/u-boot.lds;
	@echo "MV_OUTPUT = $(RULE:_config=)" >> include/config.mk;	\
#=======================
# Soc Compilation flag
#=======================
	@[ -z "$(findstring 78XX0_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV78XX0" >> include/config.mk;	\
		  echo "** MV_78XX0 image ** config " ; \
		}
	@[ -z "$(findstring 76100_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV78XX0" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV76100" >> include/config.mk;	\
		  echo "** MV_76100 image ** config " ; \
		}
	@[ -z "$(findstring 78200_MP,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV78XX0" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV78200" >> include/config.mk;	\
		  echo "MV78200 =y" >> include/config.mk;	\
		  echo "** MV78200 image ** config " ; \
		}
	@[ -z "$(findstring 88f632x,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV632X" >> include/config.mk;	\
		echo "MV_FLAGS += -DMV6323" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV78XX0" >> include/config.mk;	\
		  echo "MV_FLAGS += -DMV78200" >> include/config.mk;	\
		  echo "MV88F632X =y" >> include/config.mk;	\
		  echo "MV78200 =y" >> include/config.mk;	\
		  echo "** MV88F632X image ** config " ; \
		}
#=======================
# Board Compilation flags
#=======================
	@[ -z "$(findstring db78XX0_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_MV78XX0" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_32M" >> include/config.mk; \
#		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
#	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_dd/u-boot-sec256k.lds board/mv_feroceon/config_dd/u-boot.lds; \
		  echo "** DB 78XX0 BP ** config " ; \
                }
	@[ -z "$(findstring db76100_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_MV78XX0" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  echo "** DB 78XX0 BP ** config " ; \
                }
	@[ -z "$(findstring db78200_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_MV78XX0" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_32M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config_dd/u-boot-sec128k.lds board/mv_feroceon/config_dd/u-boot.lds; \
		  echo "** DB 78200 A BP ** config " ; \
                }
	@[ -z "$(findstring _AMC_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_MV78XX0_AMC" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  echo "** RD 78XX0 AMC ** config " ; \
                }
	@[ -z "$(findstring _H3C_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_MV78XX0_H3C" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_2M" >> include/config.mk;	\
		  echo "** RD 78XX0 H3C ** config " ; \
                }
	@[ -z "$(findstring _MASA_2DIMM_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_MV78XX0_MASA" >> include/config.mk;  \
		  echo "MV_FLAGS += -DRD_MV78XX0_MASA_2DIMM" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  echo "** RD 78XX0 MASA ** config " ; \
                }
	@[ -z "$(findstring _MASA_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_MV78XX0_MASA" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  echo "** RD 78XX0 MASA ** config " ; \
                }
	@[ -z "$(findstring _PCAC_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_MV78XX0_PCAC" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  echo "** RD 78XX0 PCAC ** config " ; \
                }
	@[ -z "$(findstring db88f632x_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_MV88F632X" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_32M" >> include/config.mk;	\
		  echo "** DB 88F632X BP ** config " ; \
		  }

#==============================
# Little Endian Cross Compiler
#==============================
ifeq ($(BE),)
ifeq ($(CSL),)
	@echo "CROSS_COMPILE = arm-none-linux-gnueabi-" >> include/config.mk;
else	
	@echo "CROSS_COMPILE = $(CSL)" >> include/config.mk;
endif
	@echo "CONFIG_MARVELL_LE = y" >>include/config.mk ;
	@echo "export CONFIG_MARVELL_LE" >> include/config.mk ;
	@echo "** Little Endian ** config " ; 
	@echo "MV_FLAGS += -D__LE" >> include/config.mk;
endif
#==============================
# Big Endian Cross Compiler
#==============================
ifeq ($(BE),1)
	@echo "MV_FLAGS += -mbig-endian -D__BE" >> include/config.mk;
	@echo "BIG_ENDIAN =y" >> include/config.mk;
	@echo "LDFLAGS += -EB" >> include/config.mk;
ifeq ($(CSLBE),)		
	@echo "CROSS_COMPILE = armeb-none-linux-gnueabi-" >> include/config.mk;	
else
	@echo "CROSS_COMPILE = $(CSLBE)"  >> include/config.mk;
endif	
	@echo "** Big Endian ** config ";
endif

#=================
# MV 78200 image option 
#=================
ifeq ($(LNX),1)
	@echo "** Dual Boot for Linux ** config " ;
	@echo "MV_FLAGS += -DDUAL_OS_78200" >> include/config.mk;
endif


ifeq ($(LNX_SHARED),1)
	@echo "** Dual Boot with Shared Memory for Linux ** config " ;
	@echo "MV_FLAGS += -DDUAL_OS_SHARED_MEM_78200" >> include/config.mk;
endif

#=================
# USB support
#=================
#ifeq ($(USB),1)
	@echo "MV_FLAGS += -DMV_USB  -DCONFIG_CMD_USB" >> include/config.mk;
	@echo "MV_USB=y" >> include/config.mk;
	@echo "** With USB ** config " ;
#endif
#=================
# Boot from NAND support
#=================
	@echo "MV_FLAGS += -DMV_NAND" >> include/config.mk;
ifeq ($(NANDBOOT),1)
	@echo "** Boot from NAND support image ** config " ;
	@echo "MV_FLAGS += -DMV_NAND_BOOT" >> include/config.mk;
ifeq ($(LARGE_PAGE),1)
	@echo "** NAND Large page support** config " ;
	@echo "MV_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	
endif
	@echo "NAND_BOOT =y" >> include/config.mk;
	@cat board/mv_feroceon/config_dd/config_nand.mk >> board/mv_feroceon/config_dd/config.mk;
	@cp -f board/mv_feroceon/config_dd/u-boot-sec128k.lds board/mv_feroceon/config_dd/u-boot.lds;
endif
#=================
# Boot from SPI support
#=================
ifeq ($(SPIBOOT),1)
	@echo "** Boot from SPI support image ** config " ;
	@echo "MV_FLAGS += -DMV_SPI_BOOT" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;
endif

#===================
# Tiny Image support
#===================
ifneq ($(TINY),)
	@echo "MV_FLAGS += -DMV_TINY_IMAGE" >> include/config.mk;
	@echo "MV_TINY_IMAGE=y" >> include/config.mk;
ifeq ($(TINY),256K_4K)
	@echo "** TINY image BootSize=256K SEC=4K" ;
	@cp -f board/mv_feroceon/config_dd/u-boot-sec4k-tiny.lds board/mv_feroceon/config_dd/u-boot.lds;
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_4K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;

else
	@make mrproper;	
	@echo "" ;
	@echo "** ERROR : Illegal TINY image configuration" ;
	@echo "" ;
	@echo "Legal values for TINY are :" ;
	@echo "" ;
	@echo "512K_64K or 256K_4K" ;
	@echo "" ;
endif
endif
#=============================
# Summary of compilation flags
#=============================
	@echo -e "CPPFLAGS += \044(MV_IMAGE_FLAGS) \044(MV_FLAGS)" >> include/config.mk;


#########################################################################
## Marvell Feroceon based Socs
#########################################################################

ifeq ($(CROSS),armlinux)
else
CSL = /opt/sdk-le/targets/arm-mv5sft-linux-gnueabi/cross/bin/arm-mv5sft-linux-gnueabi-
CSLBE = ${ARUBA_SRC}/tools/armeb-linux-gnu-uClibc-0.9.30/usr/bin/armeb-linux-
endif

db88f1181_config \
db88f5181L_VOIP2_config \
rd88f5181L_VOIP2_FE_config \
rd88f5181L_VOIP2_GE_config \
rd88f5181L_FXO_GE_config \
db88f5181_VOIP2_config \
rd88f5181_GTW_FE_config \
rd88f5181_GTW_GE_config \
db88f5182_config \
db88f5182_A_config \
rd88f5182_NAS2_config \
rd88f5182_NAS3_config \
db88f5082_config \
rd88f5082_NAS2_config \
rd88f5082_NAS3_config \
rd88w8660_config \
db88w8660_config \
rd88w8660_AP82S_config\
db88f5181_POS_NAS_config \
db88f5181_VOIP1_config \
db88f5181_PRPMC_config \
db88f5181_PEX_PCI_config \
db88f5181_MNG_config \
db88f5180n_config \
db88f1281_config \
db88f6082bp_config \
db88f6082Lbp_config \
db88f6082sa_config \
rd88f6082nas_config \
rd88f6082u_das_nas_config \
rd88f6082das_plus_config \
rd88f6082ge_sata_config \
rd88f6082_dx243_24g_config \
rd_88f5181L_Customer1_config \
db88f5x8x_fpga_config \
db88f6183Lbp_config \
db88f6183_bp_config \
db88f6183_bp_LargeSpi_config \
rd88f6183_gp_config \
rd88f6183_ap_config \
db88f5181_old_config \
db88f5181_config :
	@$(MAKE) -s mv_feroceon RULE=$@

mv_feroceon:	unconfig
	@./mkconfig $(@:_config=) arm arm926ejs config mv_feroceon;
	@cp -f board/mv_feroceon/config/config_def.mk board/mv_feroceon/config/config.mk;
	@echo "MV_OUTPUT = $(RULE:_config=)" >> include/config.mk;	\
#=======================
# Soc Compilation flag
#=======================
	@[ -z "$(findstring 1181_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F1181" >> include/config.mk;	\
		  echo "** MV_88F1181 image ** config " ; \
		}
	@[ -z "$(findstring 1281_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F1281" >> include/config.mk;	\
		  echo "MV_88F1281=y" >> include/config.mk; \
		  echo "** MV_88F1281 image ** config " ; \
		}
	@[ -z "$(findstring 5181_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F5181" >> include/config.mk;	\
		  echo "** MV_88F5181 image ** config " ; \
		}
	@[ -z "$(findstring 5182_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F5182" >> include/config.mk;  \
		  echo "** MV_88F5182 image ** config " ; \
		}
	@[ -z "$(findstring 5082_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F5082" >> include/config.mk;  \
		  echo "** MV_88F5082 image ** config " ; \
		}
	@[ -z "$(findstring 88w8660_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88W8660" >> include/config.mk;  \
		  echo "MV_88W8660=y" >> include/config.mk; \
		  echo "** MV_88W8660 image ** config " ; \
		}
	@[ -z "$(findstring 5181L_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F5181L" >> include/config.mk;  \
		  echo "** MV_88F5181L image ** config " ; \
		}
	@[ -z "$(findstring 5180n_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F5180N" >> include/config.mk;  \
		  echo "** MV_88F5180N image ** config " ; \
		}
	@[ -z "$(findstring 6082,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F6082" >> include/config.mk;  \
		  echo "MV_88F6082=y" >> include/config.mk; \
		  echo "** MV_88F6082 image ** config " ; \
		}
	@[ -z "$(findstring 6082L,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F6082L" >> include/config.mk;  \
		  echo "MV_88F6082L=y" >> include/config.mk; \
		  echo "** MV_88F6082L image ** config " ; \
		}
	@[ -z "$(findstring 5x8x,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F5181" >> include/config.mk;  \
		  echo "MV_88F5181=y" >> include/config.mk; \
		  echo "** MV_88F5X8X image ** config " ; \
		}
	@[ -z "$(findstring 6183_,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F6183" >> include/config.mk;  \
		  echo "MV_88F6183=y" >> include/config.mk; \
		  echo "** MV_88F6183 image ** config " ; \
		}
	@[ -z "$(findstring 6183L,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_88F6183L" >> include/config.mk;  \
		  echo "MV_88F6183L=y" >> include/config.mk; \
		  echo "** MV_88F6183L image ** config " ; \
		}
#=======================
# Board Compilation flags
#=======================
	@[ -z "$(findstring db88f1181_config,$(RULE))" ] || \
		{ echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
                }
	@[ -z "$(findstring db88f1281_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F1281" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
                }
	@[ -z "$(findstring db88f5181_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F5181" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB88F5181 BP-A/B ** config " ; \
                }
	@[ -z "$(findstring db88f5181_old_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F5181_OLD" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB88F5181 OLD BP ** config " ; \
                }
	@[ -z "$(findstring db88f5x8x_fpga_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_FPGA" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB88F5X8X FPGA ** config " ; \
                }
	@[ -z "$(findstring db88f5182_config,$(RULE))" ] || \
		{ echo "CPPFLAGS += -DDB_88F5182" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F5182  ** config " ; \
                }		
	@[ -z "$(findstring db88f5182_A_config,$(RULE))" ] || \
		{ echo "CPPFLAGS += -DDB_88F5182_A" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F5182 A  ** config " ; \
                }		
	@[ -z "$(findstring rd88f5182_NAS2,$(RULE))" ] || \
		{ echo "CPPFLAGS += -DRD_88F5182" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5182  ** config " ; \
                 }
	@[ -z "$(findstring rd88f5182_NAS3,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5182_3" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5182_3  ** config " ; \
		}		
	@[ -z "$(findstring db88f5082_config,$(RULE))" ] || \
		{ echo "CPPFLAGS += -DDB_88F5082" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F5082  ** config " ; \
                }		
	@[ -z "$(findstring rd88f5082_NAS2,$(RULE))" ] || \
		{ echo "CPPFLAGS += -DRD_88F5082" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_4K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;	\
		  echo "** RD_88F5082  ** config " ; \
                 }
	@[ -z "$(findstring rd88f5082_NAS3,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5082_3" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5082_3  ** config " ; \
		}		
	@[ -z "$(findstring Customer1,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_CUSTOMER1" >> include/config.mk;  \
		  echo "MV_FLAGS += -DDB_CUSTOMER" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_32M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** Customer 1 image ** config " ; \
		}
	@[ -z "$(findstring POS_NAS,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DMV_POS_NAS" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** POS_NAS image ** config " ; \
		}
	@[ -z "$(findstring PRPMC,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_PRPMC" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** PRPMC image ** config " ; \
		}
	@[ -z "$(findstring MNG,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_MNG" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** MNG image ** config " ; \
		}
	@[ -z "$(findstring PEX_PCI,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_PEX_PCI" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** PEX_PCI image ** config " ; \
		}
	@[ -z "$(findstring db88f5181_VOIP1,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_VOIP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** VOIP1 image ** config " ; \
		}
	@[ -z "$(findstring db88w8660_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88W8660" >> include/config.mk;	\
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
                }		
	@[ -z "$(findstring rd88w8660_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88W8660" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88W8660 image ** config " ; \
		}
	@[ -z "$(findstring rd88w8660_AP82S_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88W8660_AP82S" >> include/config.mk;  \
	          echo "MV_FLAGS += -DMV_DRAM_16M" >> include/config.mk;	\
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88W8660_AP82S image ** config " ; \
		}
	@[ -z "$(findstring db88f5181_VOIP2,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_DB_88F5181L" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F5181L_VOIP2 image ** config " ; \
		}
	@[ -z "$(findstring db88f5181L_VOIP2,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F5181L" >> include/config.mk;  \
		  echo "MV_FLAGS += -DRD_DB_88F5181L" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F5181L_VOIP2 image ** config " ; \
		}		
	@[ -z "$(findstring rd88f5181L_VOIP2_FE,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5181L_FE" >> include/config.mk;  \
		  echo "MV_FLAGS += -DRD_DB_88F5181L" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5181L_FE image ** config " ; \
		}
	@[ -z "$(findstring rd88f5181L_VOIP2_GE,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5181L_GE" >> include/config.mk;  \
		  echo "MV_FLAGS += -DRD_DB_88F5181L" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5181L_GE image ** config " ; \
		}
	@[ -z "$(findstring rd88f5181L_FXO_GE,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5181L_FXO_GE" >> include/config.mk;  \
		  echo "MV_FLAGS += -DRD_DB_88F5181L" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5181L_FXO_GE image ** config " ; \
		}
	@[ -z "$(findstring rd88f5181_GTW_FE,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5181_GTWFE" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5181_GTW_FE image ** config " ; \
		}
	@[ -z "$(findstring rd88f5181_GTW_GE,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F5181_GTWGE" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F5181_GTW_GE image ** config " ; \
		}
	@[ -z "$(findstring db88f5180n_config,$(RULE))" ] || \
		{ echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
                }
	@[ -z "$(findstring db88f6082bp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6082BP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6082 image ** config " ; \
                }
	@[ -z "$(findstring db88f6082bp_LP_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6082BP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_LARGE_PAGE" >> include/config.mk;	\
		  echo "NAND_LARGE_PAGE =y" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6082 image ** config " ; \
                }
	@[ -z "$(findstring db88f6082Lbp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6082LBP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6082L image ** config " ; \
                }
	@[ -z "$(findstring db88f6082sa_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6082SA" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6082 image ** config " ; \
                }
	@[ -z "$(findstring rd88f6082nas_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6082NAS" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F6082_NAS image ** config " ; \
                }
	@[ -z "$(findstring rd88f6082u_das_nas_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6082MICRO_DAS_NAS" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F6082_MICRO_DAS_NAS image ** config " ; \
                }
	@[ -z "$(findstring rd88f6082das_plus_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6082DAS_PLUS" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F6082_DAS_PLUS image ** config " ; \
                }
	@[ -z "$(findstring rd88f6082ge_sata_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6082GE_SATA" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F6082_GE_SATA image ** config " ; \
                }
	@[ -z "$(findstring db88f6183Lbp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6183LBP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6183LBP image ** config " ; \
                }
	@[ -z "$(findstring db88f6183_bp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6183BP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6183BP image ** config " ; \
                }
	@[ -z "$(findstring db88f6183_bp_LargeSpi_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DDB_88F6183BP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_256K" >> include/config.mk;	\
		  echo "MV_IMAGE_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec256k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** DB_88F6183BP image ** config " ; \
                }
	@[ -z "$(findstring rd88f6183_gp_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6183GP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
		  echo "MV_IMAGE_FLAGS += -DMV_MMC" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F6183GP image ** config " ; \
                }
	@[ -z "$(findstring rd88f6183_ap_config,$(RULE))" ] || \
		{ echo "MV_FLAGS += -DRD_88F6183AP" >> include/config.mk;  \
		  echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;	\
	          echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;	\
		  cp -f board/mv_feroceon/config/u-boot-sec64k.lds board/mv_feroceon/config/u-boot.lds;	\
		  echo "** RD_88F6183AP image ** config " ; \
                }

#==============================
# Little Endian Cross Compiler
#==============================
ifeq ($(BE),)
ifeq ($(CSL),)
	@echo "CROSS_COMPILE = arm-none-linux-gnueabi-" >> include/config.mk;
else	
	@echo "CROSS_COMPILE = $(CSL)" >> include/config.mk;
endif
endif
#==============================
# Big Endian Cross Compiler
#==============================
ifeq ($(BE),1)
	@echo "MV_FLAGS += -mbig-endian -D__BE" >> include/config.mk;
	@echo "BIG_ENDIAN =y" >> include/config.mk;
	@echo "LDFLAGS += -EB" >> include/config.mk;
ifeq ($(CSLBE),)		
	@echo "CROSS_COMPILE = armeb-none-linux-gnueabi-" >> include/config.mk;	
else
	@echo "CROSS_COMPILE = $(CSLBE)"  >> include/config.mk;
endif	
	@echo "** Big Endian ** config ";
endif

#=================
# USB support
#=================
ifeq ($(USB),1)
	@echo "MV_FLAGS += -DMV_USB -DCONFIG_CMD_USB" >> include/config.mk;
	@echo "MV_USB=y" >> include/config.mk;
	@echo "** With USB ** config " ;
endif
#=================
# NAND support
#=================
ifeq ($(NAND),1)
	@echo "** NAND support image ** config " ;
	@echo "MV_FLAGS += -DMV_NAND" >> include/config.mk;
endif
#=================
# Boot from NAND support
#=================
ifeq ($(NANDBOOT),1)
	@echo "** Boot from NAND support image ** config " ;
	@echo "MV_FLAGS += -DMV_NAND_BOOT" >> include/config.mk;
	@echo "NAND_BOOT =y" >> include/config.mk;
	@cat board/mv_feroceon/config/config_nand.mk >> board/mv_feroceon/config/config.mk;
	cp -f board/mv_feroceon/config/u-boot-sec128k.lds board/mv_feroceon/config/u-boot.lds;
endif
#=================
# SPI support
#=================
ifeq ($(SPI),1)
	@echo "** SPI support image ** config " ;
	@echo "MV_FLAGS += -DMV_SPI" >> include/config.mk;
endif
ifeq ($(SPIBOOT),1)
	@echo "** Boot from SPI support image ** config " ;
	@echo "MV_FLAGS += -DMV_SPI" >> include/config.mk;
	@echo "MV_FLAGS += -DMV_SPI_BOOT" >> include/config.mk;
endif
#=================
# MFlash support
#=================
ifeq ($(MFLASH),1)
	@echo "** MFLASH support image ** config " ;
	@echo "MV_FLAGS += -DMV_FLASH" >> include/config.mk;
endif
ifeq ($(MFLASHBOOT),1)
	@echo "** Boot from MFLASH support image ** config " ;
	@echo "MV_FLAGS += -DMV_FLASH" >> include/config.mk;
	@echo "MV_FLAGS += -DMV_FLASH_BOOT" >> include/config.mk;
endif

#=================
# NOR support
#=================
# Boot from NOR support
ifeq ($(NORBOOT),1)
	@echo "  * Boot from NOR support";
	@echo "#define MV_SEC_128K" >> $(obj)include/config.h ;
	@echo "#define MV_NOR_BOOT" >> $(obj)include/config.h;
	@echo "NOR_BOOT = y" >> $(obj)include/config.mk;
	cp board/mv_feroceon/config_kw2/u-boot-sec128k.lds cpu/arm926ejs/u-boot.lds;
endif
ifeq ($(NOR),1)
	@echo "  * NOR support";
	@echo "#define MV_SEC_128K" >> $(obj)include/config.h ;
	@echo "#define MV_NOR" >> $(obj)include/config.h;
endif

#=================
# BOOTROM support
#=================
ifeq ($(BOOTROM),1)
	@echo "** BOOTROM support image ** config " ;
	@echo "MV_FLAGS += -DMV_BOOTROM" >> include/config.mk;
ifeq ($(NANDBOOT),1)
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header-nand.lds board/mv_feroceon/config/u-boot.lds;
else
	@cp -f board/mv_feroceon/config/u-boot-sec64k-header.lds board/mv_feroceon/config/u-boot.lds;
endif
endif
#===================
# Tiny Image support
#===================
ifneq ($(TINY),)
	@echo "MV_FLAGS += -DMV_TINY_IMAGE" >> include/config.mk;
	@echo "MV_TINY_IMAGE=y" >> include/config.mk;
ifeq ($(TINY),256K_32K)
	@echo "** TINY image BootSize=256K SEC=32K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec32k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec32k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_32K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;
else
ifeq ($(TINY),256K_64K)
	@echo "** TINY image BootSize=256K SEC=64K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec64k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec64k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;
else
ifeq ($(TINY),512K_64K)
	@echo "** TINY image BootSize=512K SEC=64K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec64k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec64k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_512K" >> include/config.mk;
else
ifeq ($(TINY),4M_128K)
	@echo "** TINY image BootSize=4M SEC=128K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec128k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec128k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_4M" >> include/config.mk;
else
ifeq ($(TINY),8M_128K)
	@echo "** TINY image BootSize=8M SEC=128K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec128k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec128k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_8M" >> include/config.mk;
else
ifeq ($(TINY),16M_64K)
	@echo "** TINY image BootSize=16M SEC=64K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec64k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec64k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_64K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;
else
ifeq ($(TINY),16M_128K)
	@echo "** TINY image BootSize=16M SEC=128K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec128k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec128k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_128K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_16M" >> include/config.mk;
else
ifeq ($(TINY),256K_4K)
	@echo "** TINY image BootSize=256K SEC=4K" ;
ifeq ($(BOOTROM),1)
	@cp -f board/mv_feroceon/config_kw/u-boot-sec4k-header-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
else
	@cp -f board/mv_feroceon/config_kw/u-boot-sec4k-tiny.lds board/mv_feroceon/config_kw/u-boot.lds;
endif
	@echo "MV_IMAGE_FLAGS = -DMV_SEC_4K" >> include/config.mk;
	@echo "MV_IMAGE_FLAGS += -DMV_BOOTSIZE_256K" >> include/config.mk;
else
	@make mrproper;	
	@echo "" ;
	@echo "** ERROR : Illegal TINY image configuration" ;
	@echo "" ;
	@echo "Legal values for TINY are :" ;
	@echo "" ;
	@echo "512K_64K, 16M_64K, 16M_128K, 256K_32K or 256K_4K" ;
	@echo "" ;
endif
endif
endif
endif
endif
endif
endif
endif
endif
#=============================
# Summary of compilation flags
#=============================
	@echo -e "CPPFLAGS += \044(MV_IMAGE_FLAGS) \044(MV_FLAGS)" >> include/config.mk;

	
#########################################################################
## END of Marvell Feroceon based Socs
#########################################################################

#########################################################################
## BRCM iProc SoCs
#########################################################################
bcm95301x	: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_BCM95301X 1" >>include/config.h
	@echo "#define CONFIG_L2C_AS_RAM 1" >>include/config.h
	@echo "#define CONFIG_CUSTOM_LINKER_SCRIPT 1" >>include/config.h
	@echo "#define CONFIG_RUN_DDR_SHMOO 1" >>include/config.h
	@echo "#define CONFIG_IPROC_BOARD_DIAGS 1" >>include/config.h
	@echo "#define CONFIG_NO_SLIC 1" >>include/config.h
	@./mkconfig -a bcm95301x_svk arm armv7 bcm95301x broadcom northstar
	@ echo "TEXT_BASE = 0x1E000000" > board/broadcom/bcm95301x/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/broadcom/bcm95301x/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/broadcom/bcm95301x/config.tmp
	@ echo "MODEL = ap20x" >> board/broadcom/bcm95301x/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/broadcom/bcm95301x/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk

springbank	: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_SPRINGBANK 1" >>include/config.h
	@echo "#define __SPRINGBANK_FLASH__ 32" >>include/config.h
	@echo "#define CONFIG_L2C_AS_RAM 1" >>include/config.h
	@echo "#define CONFIG_CUSTOM_LINKER_SCRIPT 1" >>include/config.h
	@echo "#define CONFIG_RUN_DDR_SHMOO 1" >>include/config.h
	@echo "#define CONFIG_IPROC_BOARD_DIAGS 1" >>include/config.h
	@echo "#define CONFIG_NO_SLIC 1" >>include/config.h
	@./mkconfig -a springbank arm armv7 springbank broadcom northstar
	@ echo "TEXT_BASE = 0x1E000000" > board/broadcom/springbank/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/broadcom/springbank/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/broadcom/springbank/config.tmp
	@ echo "MODEL = ap20x" >> board/broadcom/springbank/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/broadcom/springbank/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk

springbank16	: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_SPRINGBANK 1" >>include/config.h
	@echo "#define __SPRINGBANK_FLASH__ 16" >>include/config.h
	@echo "#define CONFIG_L2C_AS_RAM 1" >>include/config.h
	@echo "#define CONFIG_CUSTOM_LINKER_SCRIPT 1" >>include/config.h
	@echo "#define CONFIG_RUN_DDR_SHMOO 1" >>include/config.h
	@echo "#define CONFIG_IPROC_BOARD_DIAGS 1" >>include/config.h
	@echo "#define CONFIG_NO_SLIC 1" >>include/config.h
	@./mkconfig -a springbank arm armv7 springbank broadcom northstar
	@ echo "TEXT_BASE = 0x1E000000" > board/broadcom/springbank/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/broadcom/springbank/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/broadcom/springbank/config.tmp
	@ echo "MODEL = ap20x-16mb" >> board/broadcom/springbank/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/broadcom/springbank/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk
	@ echo "VARIANT = 16" >> include/config.mk

balvenie	: 	unconfig
	@ echo "$(@:_config=)" > include/config.name
	@ >include/config.h
	@echo "#define CONFIG_BALVENIE 1" >>include/config.h
	@echo "#define __SPRINGBANK_FLASH__ 32" >>include/config.h
	@echo "#define CONFIG_L2C_AS_RAM 1" >>include/config.h
	@echo "#define CONFIG_CUSTOM_LINKER_SCRIPT 1" >>include/config.h
	@echo "#define CONFIG_RUN_DDR_SHMOO 1" >>include/config.h
	@echo "#define CONFIG_IPROC_BOARD_DIAGS 1" >>include/config.h
	@echo "#define CONFIG_NO_SLIC 1" >>include/config.h
	@./mkconfig -a balvenie arm armv7 balvenie broadcom northstar
	@ echo "TEXT_BASE = 0x1E000000" > board/broadcom/balvenie/config.tmp
	@ echo "BOOT_TYPE = APBoot" >> board/broadcom/balvenie/config.tmp
	@ echo "BOOT_TYPE_LC = apboot" >> board/broadcom/balvenie/config.tmp
	@ echo "MODEL = ap205h" >> board/broadcom/balvenie/config.tmp
	@ echo "COMPRESS_TYPE = none" >> board/broadcom/balvenie/config.tmp
	@ echo "APBOOT = true" >> include/config.mk
	@ echo "V7 = v7" >> include/config.mk

#########################################################################
## End of BRCM iProc SoCs
#########################################################################


clean:
	@echo "  CLEAN"
	find . -type f \
		\( -name 'core' -o -name '*.bak' -o -name '*~' \
		-o -name '*.o'  -o -name '*.a'  -o -name '*.srec' -o -name '*.map' \
		-o -name '*.o.p' -o -name '*.hex' -o -name .depend \) -print \
		| xargs rm -f
	rm -f *.bz2 include/generated/*
	rm -f examples/hello_world examples/timer \
	      examples/eepro100_eeprom examples/sched \
	      examples/mem_to_mem_idma2intr examples/82559_eeprom \
	      examples/smc91111_eeprom \
	      examples/test_burst
	rm -f tools/img2srec tools/mkimage tools/envcrc tools/gen_eth_addr
	rm -f tools/mpc86x_clk tools/ncb
	rm -f tools/easylogo/easylogo tools/bmp_logo
	rm -f tools/gdb/astest tools/gdb/gdbcont tools/gdb/gdbsend
	rm -f tools/env/fw_printenv tools/env/fw_setenv
	rm -f board/cray/L1/bootscript.c board/cray/L1/bootscript.image
	rm -f board/netstar/eeprom board/netstar/crcek
	rm -f board/netstar/*.srec board/netstar/*.bin
	rm -f board/trab/trab_fkt board/voiceblue/eeprom
	rm -f board/integratorap/u-boot.lds board/integratorcp/u-boot.lds
	rm -f *_pad1 *_pad2 tstamp.c
	rm -f u-boot-*
	rm -f u-boot.mbn
#	rm -f ${BOOT_TYPE_LC}

clobber:	clean
	@echo "  CLOBBER"
	find . -type f \( -name .depend \
		-o -name '*.srec' -o -name '*.bin' -o -name u-boot.img \) \
		-print0 \
		| xargs -0 rm -f
	rm -f $(OBJS) *.bak tags TAGS include/version_autogenerated.h
	rm -fr *.*~
	rm -f nboot nboot.dis nboot.map
	rm -f u-boot u-boot.map u-boot.hex $(ALL)
	rm -f u-boot-${MV_OUTPUT}
	rm -f tools/crc32.c tools/environment.c tools/env/crc32.c
	rm -f tools/inca-swap-bytes cpu/mpc824x/bedbug_603e.c
	rm -f include/asm/proc include/asm/arch include/asm
	rm -f *_stage1 *_stage2 *.bin -f *.bin *_bin *_combined apboot cpboot
	rm -f *_srec *_elf *_map
	rm -fR images/*

mrproper \
distclean:	clobber unconfig

backup:
	F=`basename $(TOPDIR)` ; cd .. ; \
	gtar --force-local -zcvf `date "+$$F-%Y-%m-%d-%T.tar.gz"` $$F

#########################################################################

${OBJS}:	include/version_autogenerated.h
